ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB34:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_fingerThreshold[] = {
  74:Generated_Source\PSoC4/CapSense_CSHL.c ****     50u, 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_noiseThreshold[] = {
  78:Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint16 CapSense_hysteresis[] = {
  82:Generated_Source\PSoC4/CapSense_CSHL.c ****     10u, 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  84:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_debounce[] = {
  86:Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** };
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
  90:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  92:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  95:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  96:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
  98:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 101:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 102:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 103:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 104:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 105:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 106:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  28              		.loc 1 139 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 4


  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 140:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 141:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 142:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  38              		.loc 1 142 0
  39 0002 094B     		ldr	r3, .L2
  40 0004 195C     		ldrb	r1, [r3, r0]
  41              	.LVL1:
 143:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 145:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 147:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 148:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 149:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 150:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 151:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 152:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 153:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 154:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 155:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 156:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  42              		.loc 1 156 0
  43 0006 4300     		lsls	r3, r0, #1
  44 0008 084A     		ldr	r2, .L2+4
  45 000a 9C5A     		ldrh	r4, [r3, r2]
  46 000c 084A     		ldr	r2, .L2+8
  47 000e 9C52     		strh	r4, [r3, r2]
 157:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  48              		.loc 1 157 0
  49 0010 1018     		adds	r0, r2, r0
  50              	.LVL2:
  51 0012 0025     		movs	r5, #0
  52 0014 0571     		strb	r5, [r0, #4]
 158:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  53              		.loc 1 158 0
  54 0016 D018     		adds	r0, r2, r3
  55 0018 0581     		strh	r5, [r0, #8]
 159:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
  56              		.loc 1 160 0
  57 001a 5218     		adds	r2, r2, r1
  58 001c 0221     		movs	r1, #2
  59              	.LVL3:
  60 001e 1173     		strb	r1, [r2, #12]
 161:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 162:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 164:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 5


 169:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 174:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  61              		.loc 1 175 0
  62 0020 044A     		ldr	r2, .L2+12
  63 0022 9C52     		strh	r4, [r3, r2]
 176:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 178:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 179:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 182:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 184:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 185:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 187:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  64              		.loc 1 187 0
  65              		@ sp needed
  66 0024 30BD     		pop	{r4, r5, pc}
  67              	.L3:
  68 0026 C046     		.align	2
  69              	.L2:
  70 0028 00000000 		.word	CapSense_widgetNumber
  71 002c 00000000 		.word	CapSense_sensorRaw
  72 0030 00000000 		.word	.LANCHOR0
  73 0034 00000000 		.word	CapSense_rawFilterData1
  74              		.cfi_endproc
  75              	.LFE34:
  76              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  77              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  78              		.align	2
  79              		.global	CapSense_InitializeSensorBaseline
  80              		.code	16
  81              		.thumb_func
  82              		.type	CapSense_InitializeSensorBaseline, %function
  83              	CapSense_InitializeSensorBaseline:
  84              	.LFB35:
 188:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 190:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 192:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 193:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 194:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 195:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 196:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 198:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 200:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 201:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 6


 202:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 203:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 206:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 207:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 208:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 209:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  85              		.loc 1 215 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL4:
  90 0000 10B5     		push	{r4, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
  94 0002 0400     		movs	r4, r0
 216:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 217:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
  95              		.loc 1 217 0
  96 0004 FFF7FEFF 		bl	CapSense_ScanSensor
  97              	.LVL5:
  98              	.L5:
 218:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
  99              		.loc 1 218 0 discriminator 1
 100 0008 FFF7FEFF 		bl	CapSense_IsBusy
 101              	.LVL6:
 102 000c 0028     		cmp	r0, #0
 103 000e FBD1     		bne	.L5
 219:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 220:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 221:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 223:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 224:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 104              		.loc 1 224 0
 105 0010 2000     		movs	r0, r4
 106 0012 FFF7FEFF 		bl	CapSense_BaseInit
 107              	.LVL7:
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 108              		.loc 1 225 0
 109              		@ sp needed
 110              	.LVL8:
 111 0016 10BD     		pop	{r4, pc}
 112              		.cfi_endproc
 113              	.LFE35:
 114              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 115              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 116              		.align	2
 117              		.global	CapSense_InitializeAllBaselines
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 7


 118              		.code	16
 119              		.thumb_func
 120              		.type	CapSense_InitializeAllBaselines, %function
 121              	CapSense_InitializeAllBaselines:
 122              	.LFB36:
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 239:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 240:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 241:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 242:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 243:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 244:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 246:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 247:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 123              		.loc 1 252 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127 0000 10B5     		push	{r4, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131              	.LVL9:
 253:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 255:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 132              		.loc 1 255 0
 133 0002 0024     		movs	r4, #0
 134 0004 03E0     		b	.L7
 135              	.LVL10:
 136              	.L8:
 256:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 257:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 137              		.loc 1 257 0 discriminator 3
 138 0006 2000     		movs	r0, r4
 139 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 140              	.LVL11:
 255:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 141              		.loc 1 255 0 discriminator 3
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 8


 142 000c 0134     		adds	r4, r4, #1
 143              	.LVL12:
 144              	.L7:
 255:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 145              		.loc 1 255 0 is_stmt 0 discriminator 1
 146 000e 002C     		cmp	r4, #0
 147 0010 F9D0     		beq	.L8
 258:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 148              		.loc 1 259 0 is_stmt 1
 149              		@ sp needed
 150              	.LVL13:
 151 0012 10BD     		pop	{r4, pc}
 152              		.cfi_endproc
 153              	.LFE36:
 154              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 155              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 156              		.align	2
 157              		.global	CapSense_InitializeEnabledBaselines
 158              		.code	16
 159              		.thumb_func
 160              		.type	CapSense_InitializeEnabledBaselines, %function
 161              	CapSense_InitializeEnabledBaselines:
 162              	.LFB37:
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 276:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 278:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 279:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 280:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 281:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 163              		.loc 1 287 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 9


 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 288:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 289:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 291:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 171              		.loc 1 291 0
 172 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 173              	.LVL14:
 174              	.L10:
 292:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 175              		.loc 1 292 0 discriminator 1
 176 0006 FFF7FEFF 		bl	CapSense_IsBusy
 177              	.LVL15:
 178 000a 0028     		cmp	r0, #0
 179 000c FBD1     		bne	.L10
 180 000e 0024     		movs	r4, #0
 181 0010 09E0     		b	.L11
 182              	.LVL16:
 183              	.L13:
 293:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 294:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 295:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 296:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 298:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 299:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 184              		.loc 1 299 0
 185 0012 2100     		movs	r1, r4
 186 0014 0548     		ldr	r0, .L14
 187 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 188              	.LVL17:
 300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 301:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 302:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 189              		.loc 1 302 0
 190 001a 0028     		cmp	r0, #0
 191 001c 02D0     		beq	.L12
 303:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 304:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 305:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 192              		.loc 1 305 0
 193 001e 2000     		movs	r0, r4
 194              	.LVL18:
 195 0020 FFF7FEFF 		bl	CapSense_BaseInit
 196              	.LVL19:
 197              	.L12:
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 198              		.loc 1 297 0 discriminator 2
 199 0024 0134     		adds	r4, r4, #1
 200              	.LVL20:
 201              	.L11:
 297:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 202              		.loc 1 297 0 is_stmt 0 discriminator 1
 203 0026 002C     		cmp	r4, #0
 204 0028 F3D0     		beq	.L13
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 10


 306:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 307:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 205              		.loc 1 308 0 is_stmt 1
 206              		@ sp needed
 207              	.LVL21:
 208 002a 10BD     		pop	{r4, pc}
 209              	.L15:
 210              		.align	2
 211              	.L14:
 212 002c 00000000 		.word	CapSense_sensorEnableMask
 213              		.cfi_endproc
 214              	.LFE37:
 215              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 216              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 217              		.align	2
 218              		.global	CapSense_GetBaselineData
 219              		.code	16
 220              		.thumb_func
 221              		.type	CapSense_GetBaselineData, %function
 222              	CapSense_GetBaselineData:
 223              	.LFB42:
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 311:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 312:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 314:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 315:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 316:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 318:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 320:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 321:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 322:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 324:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 325:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 326:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 327:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 328:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 329:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 330:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 333:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 11


 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 354:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 355:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 356:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 357:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 358:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 noiseThreshold;
 359:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 360:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 361:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 362:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 363:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 364:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 365:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 366:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
 367:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 368:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 369:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 371:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 372:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 373:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 374:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 378:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 382:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 385:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 388:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 389:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 390:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 397:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 400:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 12


 401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 405:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 408:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 411:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 412:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 415:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 416:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 424:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 428:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 429:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 434:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 447:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 452:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 13


 458:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 466:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 469:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 472:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 476:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 482:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 489:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 492:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 495:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 499:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 505:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 508:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 510:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 511:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 512:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 513:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 514:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 14


 515:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 516:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 517:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 518:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 519:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 520:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 521:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 522:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 523:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 524:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 525:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 526:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 527:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 529:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 530:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 531:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 532:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 543:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 545:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 546:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 548:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 549:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 550:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 551:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 552:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 553:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 555:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 556:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 557:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 558:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 559:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 560:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 561:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 562:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 563:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 564:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 566:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 568:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 569:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 571:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 15


 572:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 573:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 574:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 575:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 576:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 578:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 579:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 580:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 584:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 585:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 586:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 587:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 597:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 599:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 600:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 603:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 604:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 605:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 607:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 608:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 609:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 610:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 618:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 620:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 622:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 623:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 625:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 626:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 16


 629:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 630:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 631:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 632:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 633:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 644:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 645:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 646:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 647:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 648:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 649:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 650:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 651:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 653:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 654:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 656:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 657:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 660:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 661:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 664:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 665:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 669:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 670:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 671:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 673:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 675:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 676:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 679:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 682:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 683:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 17


 686:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 687:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 688:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 689:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 690:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 224              		.loc 1 692 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL22:
 693:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 230              		.loc 1 693 0
 231 0000 4000     		lsls	r0, r0, #1
 232              	.LVL23:
 233 0002 014B     		ldr	r3, .L17
 234 0004 185A     		ldrh	r0, [r3, r0]
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 235              		.loc 1 694 0
 236              		@ sp needed
 237 0006 7047     		bx	lr
 238              	.L18:
 239              		.align	2
 240              	.L17:
 241 0008 00000000 		.word	.LANCHOR0
 242              		.cfi_endproc
 243              	.LFE42:
 244              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 245              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 246              		.align	2
 247              		.global	CapSense_SetBaselineData
 248              		.code	16
 249              		.thumb_func
 250              		.type	CapSense_SetBaselineData, %function
 251              	CapSense_SetBaselineData:
 252              	.LFB43:
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 18


 714:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 716:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 253              		.loc 1 719 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 258              	.LVL24:
 720:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 259              		.loc 1 720 0
 260 0000 4000     		lsls	r0, r0, #1
 261              	.LVL25:
 262 0002 014B     		ldr	r3, .L20
 263 0004 C152     		strh	r1, [r0, r3]
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 264              		.loc 1 721 0
 265              		@ sp needed
 266 0006 7047     		bx	lr
 267              	.L21:
 268              		.align	2
 269              	.L20:
 270 0008 00000000 		.word	.LANCHOR0
 271              		.cfi_endproc
 272              	.LFE43:
 273              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 274              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 275              		.align	2
 276              		.global	CapSense_GetDiffCountData
 277              		.code	16
 278              		.thumb_func
 279              		.type	CapSense_GetDiffCountData, %function
 280              	CapSense_GetDiffCountData:
 281              	.LFB44:
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 19


 742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetDiffCountData(uint32 sensor)
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 282              		.loc 1 746 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL26:
 747:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 288              		.loc 1 747 0
 289 0000 4000     		lsls	r0, r0, #1
 290              	.LVL27:
 291 0002 024B     		ldr	r3, .L23
 292 0004 1818     		adds	r0, r3, r0
 293 0006 0089     		ldrh	r0, [r0, #8]
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 294              		.loc 1 748 0
 295              		@ sp needed
 296 0008 7047     		bx	lr
 297              	.L24:
 298 000a C046     		.align	2
 299              	.L23:
 300 000c 00000000 		.word	.LANCHOR0
 301              		.cfi_endproc
 302              	.LFE44:
 303              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 304              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 305              		.align	2
 306              		.global	CapSense_SetDiffCountData
 307              		.code	16
 308              		.thumb_func
 309              		.type	CapSense_SetDiffCountData, %function
 310              	CapSense_SetDiffCountData:
 311              	.LFB45:
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 20


 769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 770:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint16 value)
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 312              		.loc 1 773 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL28:
 774:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 318              		.loc 1 774 0
 319 0000 4000     		lsls	r0, r0, #1
 320              	.LVL29:
 321 0002 024B     		ldr	r3, .L26
 322 0004 1818     		adds	r0, r3, r0
 323 0006 0181     		strh	r1, [r0, #8]
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 324              		.loc 1 775 0
 325              		@ sp needed
 326 0008 7047     		bx	lr
 327              	.L27:
 328 000a C046     		.align	2
 329              	.L26:
 330 000c 00000000 		.word	.LANCHOR0
 331              		.cfi_endproc
 332              	.LFE45:
 333              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 334              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 335              		.align	2
 336              		.global	CapSense_GetFingerThreshold
 337              		.code	16
 338              		.thumb_func
 339              		.type	CapSense_GetFingerThreshold, %function
 340              	CapSense_GetFingerThreshold:
 341              	.LFB46:
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 21


 796:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 797:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerThreshold(uint32 widget)
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 342              		.loc 1 800 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		@ link register save eliminated.
 347              	.LVL30:
 801:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 348              		.loc 1 802 0
 349 0000 3220     		movs	r0, #50
 350              	.LVL31:
 351              		@ sp needed
 352 0002 7047     		bx	lr
 353              		.cfi_endproc
 354              	.LFE46:
 355              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 356              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 357              		.align	2
 358              		.global	CapSense_GetNoiseThreshold
 359              		.code	16
 360              		.thumb_func
 361              		.type	CapSense_GetNoiseThreshold, %function
 362              	CapSense_GetNoiseThreshold:
 363              	.LFB47:
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 824:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNoiseThreshold(uint32 widget)
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 364              		.loc 1 827 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 22


 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369              	.LVL32:
 828:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 370              		.loc 1 829 0
 371 0000 0320     		movs	r0, #3
 372              	.LVL33:
 373              		@ sp needed
 374 0002 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE47:
 377              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 378              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 379              		.align	2
 380              		.global	CapSense_GetFingerHysteresis
 381              		.code	16
 382              		.thumb_func
 383              		.type	CapSense_GetFingerHysteresis, %function
 384              	CapSense_GetFingerHysteresis:
 385              	.LFB48:
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 851:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetFingerHysteresis(uint32 widget)
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 386              		.loc 1 855 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              		@ link register save eliminated.
 391              	.LVL34:
 856:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 392              		.loc 1 857 0
 393 0000 0A20     		movs	r0, #10
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 23


 394              	.LVL35:
 395              		@ sp needed
 396 0002 7047     		bx	lr
 397              		.cfi_endproc
 398              	.LFE48:
 399              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 400              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 401              		.align	2
 402              		.global	CapSense_GetNegativeNoiseThreshold
 403              		.code	16
 404              		.thumb_func
 405              		.type	CapSense_GetNegativeNoiseThreshold, %function
 406              	CapSense_GetNegativeNoiseThreshold:
 407              	.LFB49:
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 879:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 408              		.loc 1 883 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LVL36:
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 885:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 887:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 414              		.loc 1 889 0
 415 0000 1420     		movs	r0, #20
 416              	.LVL37:
 417              		@ sp needed
 418 0002 7047     		bx	lr
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 24


 419              		.cfi_endproc
 420              	.LFE49:
 421              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 422              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 423              		.align	2
 424              		.global	CapSense_CheckIsSensorActive
 425              		.code	16
 426              		.thumb_func
 427              		.type	CapSense_CheckIsSensorActive, %function
 428              	CapSense_CheckIsSensorActive:
 429              	.LFB50:
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 893:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 894:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 895:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 896:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 897:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 898:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 899:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 900:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 901:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 902:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 903:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 904:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 905:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 906:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 907:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 909:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 911:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 912:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 914:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 915:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint16 value)
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 919:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 920:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 25


 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 943:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint16 value)
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 947:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 948:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 970:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 971:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint16 value)
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 975:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 976:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 26


 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 998:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 999:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint16 value)
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1004:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1005:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1027:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1028:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1032:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1033:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 27


1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1055:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1056:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1060:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1061:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1062:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1063:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1064:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1065:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1066:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1067:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1068:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1069:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1070:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1071:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1072:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1073:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1074:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1075:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1076:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1077:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1078:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1079:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1080:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1081:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1082:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 430              		.loc 1 1103 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 28


 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              	.LVL38:
 435 0000 70B5     		push	{r4, r5, r6, lr}
 436              		.cfi_def_cfa_offset 16
 437              		.cfi_offset 4, -16
 438              		.cfi_offset 5, -12
 439              		.cfi_offset 6, -8
 440              		.cfi_offset 14, -4
 441 0002 0400     		movs	r4, r0
1104:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1105:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1106:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1108:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 fingerThreshold;
1109:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 hysteresis;
1110:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1111:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1112:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1113:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 442              		.loc 1 1113 0
 443 0004 1D4B     		ldr	r3, .L37
 444 0006 1D5C     		ldrb	r5, [r3, r0]
 445              	.LVL39:
1114:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1115:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
1116:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
1117:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1119:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget;
1120:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1122:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1123:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 446              		.loc 1 1123 0
 447 0008 0100     		movs	r1, r0
 448 000a 1D48     		ldr	r0, .L37+4
 449              	.LVL40:
 450 000c 1030     		adds	r0, r0, #16
 451 000e FFF7FEFF 		bl	CapSense_GetBitValue
 452              	.LVL41:
 453 0012 0028     		cmp	r0, #0
 454 0014 10D0     		beq	.L33
1124:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1125:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1126:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 455              		.loc 1 1126 0
 456 0016 6300     		lsls	r3, r4, #1
 457 0018 194A     		ldr	r2, .L37+4
 458 001a D318     		adds	r3, r2, r3
 459 001c 1B89     		ldrh	r3, [r3, #8]
 460 001e 272B     		cmp	r3, #39
 461 0020 22DC     		bgt	.L34
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 462              		.loc 1 1128 0
 463 0022 1600     		movs	r6, r2
 464 0024 1000     		movs	r0, r2
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 29


 465 0026 1030     		adds	r0, r0, #16
 466 0028 0022     		movs	r2, #0
 467 002a 2100     		movs	r1, r4
 468 002c FFF7FEFF 		bl	CapSense_SetBitValue
 469              	.LVL42:
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1130:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 470              		.loc 1 1130 0
 471 0030 7519     		adds	r5, r6, r5
 472              	.LVL43:
 473 0032 0223     		movs	r3, #2
 474 0034 2B73     		strb	r3, [r5, #12]
 475 0036 17E0     		b	.L34
 476              	.LVL44:
 477              	.L33:
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1134:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 478              		.loc 1 1136 0
 479 0038 6300     		lsls	r3, r4, #1
 480 003a 114A     		ldr	r2, .L37+4
 481 003c D318     		adds	r3, r2, r3
 482 003e 1B89     		ldrh	r3, [r3, #8]
 483 0040 3B2B     		cmp	r3, #59
 484 0042 0DDD     		ble	.L35
1137:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 485              		.loc 1 1138 0
 486 0044 5519     		adds	r5, r2, r5
 487              	.LVL45:
 488 0046 2B7B     		ldrb	r3, [r5, #12]
 489 0048 013B     		subs	r3, r3, #1
 490 004a DBB2     		uxtb	r3, r3
 491 004c 2B73     		strb	r3, [r5, #12]
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 492              		.loc 1 1140 0
 493 004e 002B     		cmp	r3, #0
 494 0050 0AD1     		bne	.L34
1141:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 495              		.loc 1 1142 0
 496 0052 0122     		movs	r2, #1
 497 0054 2100     		movs	r1, r4
 498 0056 0A48     		ldr	r0, .L37+4
 499 0058 1030     		adds	r0, r0, #16
 500 005a FFF7FEFF 		bl	CapSense_SetBitValue
 501              	.LVL46:
 502 005e 03E0     		b	.L34
 503              	.LVL47:
 504              	.L35:
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 30


1146:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 505              		.loc 1 1148 0
 506 0060 074B     		ldr	r3, .L37+4
 507 0062 5D19     		adds	r5, r3, r5
 508              	.LVL48:
 509 0064 0223     		movs	r3, #2
 510 0066 2B73     		strb	r3, [r5, #12]
 511              	.L34:
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1151:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 512              		.loc 1 1152 0
 513 0068 2100     		movs	r1, r4
 514 006a 0548     		ldr	r0, .L37+4
 515 006c 1030     		adds	r0, r0, #16
 516 006e FFF7FEFF 		bl	CapSense_GetBitValue
 517              	.LVL49:
 518 0072 0028     		cmp	r0, #0
 519 0074 00D0     		beq	.L36
 520 0076 0120     		movs	r0, #1
 521              	.L36:
1153:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 522              		.loc 1 1153 0 discriminator 4
 523              		@ sp needed
 524              	.LVL50:
 525 0078 70BD     		pop	{r4, r5, r6, pc}
 526              	.L38:
 527 007a C046     		.align	2
 528              	.L37:
 529 007c 00000000 		.word	CapSense_widgetNumber
 530 0080 00000000 		.word	.LANCHOR0
 531              		.cfi_endproc
 532              	.LFE50:
 533              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 534              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 535              		.align	2
 536              		.global	CapSense_CheckIsWidgetActive
 537              		.code	16
 538              		.thumb_func
 539              		.type	CapSense_CheckIsWidgetActive, %function
 540              	CapSense_CheckIsWidgetActive:
 541              	.LFB51:
1154:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1155:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1156:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1157:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1158:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1159:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1160:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1161:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1162:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1163:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1164:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1165:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 31


1166:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1167:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1168:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1169:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1170:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1171:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1172:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1173:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1174:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1175:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1176:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1177:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1178:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1179:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1180:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1181:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1183:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 542              		.loc 1 1185 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              	.LVL51:
 547 0000 10B5     		push	{r4, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 4, -8
 550              		.cfi_offset 14, -4
 551              	.LVL52:
1186:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
1187:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
1188:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1190:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1191:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1192:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1193:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 552              		.loc 1 1193 0
 553 0002 0020     		movs	r0, #0
 554              	.LVL53:
 555 0004 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 556              	.LVL54:
 557 0008 0028     		cmp	r0, #0
 558 000a 00D0     		beq	.L40
1194:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1195:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 559              		.loc 1 1195 0
 560 000c 0120     		movs	r0, #1
 561              	.L40:
 562              	.LVL55:
1196:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1197:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1198:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1199:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1200:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 32


1202:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1203:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 563              		.loc 1 1204 0
 564              		@ sp needed
 565 000e 10BD     		pop	{r4, pc}
 566              		.cfi_endproc
 567              	.LFE51:
 568              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 569              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 570              		.align	2
 571              		.global	CapSense_CheckIsAnyWidgetActive
 572              		.code	16
 573              		.thumb_func
 574              		.type	CapSense_CheckIsAnyWidgetActive, %function
 575              	CapSense_CheckIsAnyWidgetActive:
 576              	.LFB52:
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1217:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1218:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1219:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1222:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1223:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1224:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1225:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1226:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1227:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1228:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1229:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1230:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 577              		.loc 1 1231 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581 0000 70B5     		push	{r4, r5, r6, lr}
 582              		.cfi_def_cfa_offset 16
 583              		.cfi_offset 4, -16
 584              		.cfi_offset 5, -12
 585              		.cfi_offset 6, -8
 586              		.cfi_offset 14, -4
 587              	.LVL56:
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1233:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 33


1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 588              		.loc 1 1234 0
 589 0002 0025     		movs	r5, #0
1235:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 590              		.loc 1 1236 0
 591 0004 0024     		movs	r4, #0
 592 0006 06E0     		b	.L43
 593              	.LVL57:
 594              	.L45:
1237:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1238:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 595              		.loc 1 1238 0
 596 0008 2000     		movs	r0, r4
 597 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 598              	.LVL58:
 599 000e 0028     		cmp	r0, #0
 600 0010 00D0     		beq	.L44
1239:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1240:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 601              		.loc 1 1240 0
 602 0012 0125     		movs	r5, #1
 603              	.LVL59:
 604              	.L44:
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 605              		.loc 1 1236 0 discriminator 2
 606 0014 0134     		adds	r4, r4, #1
 607              	.LVL60:
 608              	.L43:
1236:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 609              		.loc 1 1236 0 is_stmt 0 discriminator 1
 610 0016 002C     		cmp	r4, #0
 611 0018 F6D0     		beq	.L45
1241:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1242:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1243:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1246:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 612              		.loc 1 1247 0 is_stmt 1
 613 001a 2800     		movs	r0, r5
 614              		@ sp needed
 615              	.LVL61:
 616              	.LVL62:
 617 001c 70BD     		pop	{r4, r5, r6, pc}
 618              		.cfi_endproc
 619              	.LFE52:
 620              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 621 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 622              		.align	2
 623              		.global	CapSense_EnableWidget
 624              		.code	16
 625              		.thumb_func
 626              		.type	CapSense_EnableWidget, %function
 627              	CapSense_EnableWidget:
 628              	.LFB53:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 34


1248:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1264:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1266:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1267:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1269:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1270:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1273:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1274:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1277:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 629              		.loc 1 1278 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 0, uses_anonymous_args = 0
 633              	.LVL63:
 634 0000 10B5     		push	{r4, lr}
 635              		.cfi_def_cfa_offset 8
 636              		.cfi_offset 4, -8
 637              		.cfi_offset 14, -4
 638              	.LVL64:
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1280:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
1281:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1283:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1284:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1285:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1286:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 639              		.loc 1 1286 0
 640 0002 0122     		movs	r2, #1
 641 0004 0021     		movs	r1, #0
 642 0006 0248     		ldr	r0, .L48
 643              	.LVL65:
 644 0008 FFF7FEFF 		bl	CapSense_SetBitValue
 645              	.LVL66:
1287:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 35


1288:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1289:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 646              		.loc 1 1290 0
 647              		@ sp needed
 648 000c 10BD     		pop	{r4, pc}
 649              	.L49:
 650 000e C046     		.align	2
 651              	.L48:
 652 0010 00000000 		.word	CapSense_sensorEnableMask
 653              		.cfi_endproc
 654              	.LFE53:
 655              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 656              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 657              		.align	2
 658              		.global	CapSense_DisableWidget
 659              		.code	16
 660              		.thumb_func
 661              		.type	CapSense_DisableWidget, %function
 662              	CapSense_DisableWidget:
 663              	.LFB54:
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1306:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1311:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1312:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1314:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1315:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1316:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1317:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1318:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1319:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1320:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 664              		.loc 1 1321 0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 0, uses_anonymous_args = 0
 668              	.LVL67:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 36


 669 0000 10B5     		push	{r4, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
 673              	.LVL68:
1322:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
1323:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1325:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1326:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1327:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1329:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 674              		.loc 1 1329 0
 675 0002 0022     		movs	r2, #0
 676 0004 0021     		movs	r1, #0
 677 0006 0248     		ldr	r0, .L51
 678              	.LVL69:
 679 0008 FFF7FEFF 		bl	CapSense_SetBitValue
 680              	.LVL70:
1330:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
1331:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1332:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 681              		.loc 1 1333 0
 682              		@ sp needed
 683 000c 10BD     		pop	{r4, pc}
 684              	.L52:
 685 000e C046     		.align	2
 686              	.L51:
 687 0010 00000000 		.word	CapSense_sensorEnableMask
 688              		.cfi_endproc
 689              	.LFE54:
 690              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 691              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 692              		.align	2
 693              		.global	CapSense_IIR4Filter
 694              		.code	16
 695              		.thumb_func
 696              		.type	CapSense_IIR4Filter, %function
 697              	CapSense_IIR4Filter:
 698              	.LFB55:
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1335:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1337:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1338:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1339:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1340:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1341:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1342:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1343:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1344:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1345:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1346:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1347:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1348:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 37


1349:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1350:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1352:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1365:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1367:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8 *
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1384:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 temp = 0u;
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset];
1387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 38


1406:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1415:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1418:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1421:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1424:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1426:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1448:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1449:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1451:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1452:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1457:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 39


1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1465:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1479:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1480:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1498:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1499:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1508:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 40


1520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1525:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint16 noiseThreshold)
1528:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1529:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1530:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1531:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1537:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint16 CapSense_centroid[3u];
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1542:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1546:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1550:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16  *startOfSlider = &CapSense_sensorSignal[offset];
1552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1556:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1559:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1561:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1562:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1565:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1568:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1573:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 41


1577:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1581:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1587:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1589:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1592:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1596:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1614:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1620:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 42


1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1645:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1649:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1651:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1658:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1659:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1662:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1673:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1676:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
1680:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1682:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1685:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
1689:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1690:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 43


1691:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1695:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1698:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1701:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1702:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1708:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1710:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1713:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1716:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1724:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1726:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1729:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1732:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1733:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1734:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1735:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1745:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 44


1748:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1751:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1758:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1763:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1769:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1775:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1776:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget],
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget])
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1782:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1788:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1789:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1794:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1795:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1804:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 45


1805:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1806:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1813:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1815:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1819:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1826:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1835:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1846:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1849:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1860:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 46


1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1866:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1871:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1880:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1885:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
1891:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1900:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1901:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1902:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1904:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1905:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1906:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1907:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1916:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 47


1919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1936:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1938:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1950:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1957:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1962:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget],
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint16)CapSense_fingerThreshold[widget])
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1969:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1975:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 48


1976:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1981:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1982:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1988:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1991:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
1993:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2000:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2002:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2006:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2013:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2022:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 49


2033:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2037:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2048:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2053:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2059:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2068:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2073:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2079:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2088:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 50


2090:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2091:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2092:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2093:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2094:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2104:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2110:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2119:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2122:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2123:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2124:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2125:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2138:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2145:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 51


2147:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2153:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2160:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2165:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2169:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2172:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2176:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2177:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2181:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2184:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2188:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2191:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2202:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2203:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 52


2204:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2207:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2208:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2212:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2216:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2219:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2227:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2233:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2235:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2238:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2244:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2248:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2250:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2259:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 53


2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2266:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2268:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2272:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2275:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2284:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2288:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2290:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2295:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2299:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2300:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2303:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2304:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2310:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2311:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2315:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 54


2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2319:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2322:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2326:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2328:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2331:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2335:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2339:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2342:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2343:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2344:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2345:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2353:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2359:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2370:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2373:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2374:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 55


2375:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2376:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2382:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2387:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2390:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2393:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2394:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2395:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2406:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2413:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2414:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2418:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2421:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2425:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2426:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2427:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2429:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2430:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2431:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 56


2432:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2455:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2458:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2460:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2461:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2462:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2464:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2467:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2468:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2469:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2488:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 57


2489:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2492:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 699              		.loc 1 2493 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704              	.LVL71:
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2495:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 705              		.loc 1 2497 0
 706 0000 4018     		adds	r0, r0, r1
 707              	.LVL72:
2498:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 708              		.loc 1 2498 0
 709 0002 4900     		lsls	r1, r1, #1
 710              	.LVL73:
 711 0004 4018     		adds	r0, r0, r1
 712              	.LVL74:
2499:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 713              		.loc 1 2499 0
 714 0006 8008     		lsrs	r0, r0, #2
 715              	.LVL75:
2500:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 716              		.loc 1 2501 0
 717 0008 80B2     		uxth	r0, r0
 718              	.LVL76:
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 719              		.loc 1 2502 0
 720              		@ sp needed
 721 000a 7047     		bx	lr
 722              		.cfi_endproc
 723              	.LFE55:
 724              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 725              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 726              		.align	2
 727              		.global	CapSense_UpdateBaselineNoThreshold
 728              		.code	16
 729              		.thumb_func
 730              		.type	CapSense_UpdateBaselineNoThreshold, %function
 731              	CapSense_UpdateBaselineNoThreshold:
 732              	.LFB38:
 352:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 733              		.loc 1 352 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              	.LVL77:
 738 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 739              		.cfi_def_cfa_offset 20
 740              		.cfi_offset 4, -20
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 58


 741              		.cfi_offset 5, -16
 742              		.cfi_offset 6, -12
 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
 745 0002 4746     		mov	r7, r8
 746 0004 80B4     		push	{r7}
 747              		.cfi_def_cfa_offset 24
 748              		.cfi_offset 8, -24
 749 0006 0400     		movs	r4, r0
 750              	.LVL78:
 367:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 751              		.loc 1 367 0
 752 0008 4200     		lsls	r2, r0, #1
 753 000a 2D4B     		ldr	r3, .L64
 754 000c D05A     		ldrh	r0, [r2, r3]
 755              	.LVL79:
 370:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 756              		.loc 1 370 0
 757 000e 2D4B     		ldr	r3, .L64+4
 758 0010 1B78     		ldrb	r3, [r3]
 759 0012 002B     		cmp	r3, #0
 760 0014 05D0     		beq	.L55
 391:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 761              		.loc 1 391 0
 762 0016 2C4D     		ldr	r5, .L64+8
 763 0018 1600     		movs	r6, r2
 764 001a 515B     		ldrh	r1, [r2, r5]
 765 001c FFF7FEFF 		bl	CapSense_IIR4Filter
 766              	.LVL80:
 392:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 767              		.loc 1 392 0
 768 0020 7053     		strh	r0, [r6, r5]
 769              	.L55:
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 770              		.loc 1 418 0
 771 0022 6300     		lsls	r3, r4, #1
 772 0024 294A     		ldr	r2, .L64+12
 773 0026 9A5A     		ldrh	r2, [r3, r2]
 774 0028 9042     		cmp	r0, r2
 775 002a 06D3     		bcc	.L56
 420:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 776              		.loc 1 420 0
 777 002c 0021     		movs	r1, #0
 778 002e 284B     		ldr	r3, .L64+16
 779 0030 1955     		strb	r1, [r3, r4]
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 780              		.loc 1 421 0
 781 0032 851A     		subs	r5, r0, r2
 782 0034 ADB2     		uxth	r5, r5
 783              	.LVL81:
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 784              		.loc 1 422 0
 785 0036 0126     		movs	r6, #1
 786 0038 02E0     		b	.L57
 787              	.LVL82:
 788              	.L56:
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 59


 789              		.loc 1 426 0
 790 003a 151A     		subs	r5, r2, r0
 791 003c ADB2     		uxth	r5, r5
 792              	.LVL83:
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 793              		.loc 1 427 0
 794 003e 0026     		movs	r6, #0
 795              	.LVL84:
 796              	.L57:
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 797              		.loc 1 433 0
 798 0040 002E     		cmp	r6, #0
 799 0042 13D1     		bne	.L58
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 800              		.loc 1 433 0 is_stmt 0 discriminator 1
 801 0044 142D     		cmp	r5, #20
 802 0046 11D9     		bls	.L58
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 803              		.loc 1 436 0 is_stmt 1
 804 0048 214B     		ldr	r3, .L64+16
 805 004a 1B5D     		ldrb	r3, [r3, r4]
 806 004c 1D4A     		ldr	r2, .L64+4
 807 004e 1219     		adds	r2, r2, r4
 808 0050 1279     		ldrb	r2, [r2, #4]
 809 0052 9342     		cmp	r3, r2
 810 0054 06D3     		bcc	.L59
 438:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 811              		.loc 1 438 0
 812 0056 2000     		movs	r0, r4
 813              	.LVL85:
 814 0058 FFF7FEFF 		bl	CapSense_BaseInit
 815              	.LVL86:
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 816              		.loc 1 439 0
 817 005c 0022     		movs	r2, #0
 818 005e 1C4B     		ldr	r3, .L64+16
 819 0060 1A55     		strb	r2, [r3, r4]
 820 0062 1BE0     		b	.L60
 821              	.LVL87:
 822              	.L59:
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 823              		.loc 1 443 0
 824 0064 0133     		adds	r3, r3, #1
 825 0066 1A4A     		ldr	r2, .L64+16
 826 0068 1355     		strb	r3, [r2, r4]
 827 006a 17E0     		b	.L60
 828              	.L58:
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 829              		.loc 1 457 0
 830 006c 032D     		cmp	r5, #3
 831 006e 03D9     		bls	.L61
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 832              		.loc 1 457 0 is_stmt 0 discriminator 1
 833 0070 132D     		cmp	r5, #19
 834 0072 13D8     		bhi	.L60
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 835              		.loc 1 459 0 is_stmt 1
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 60


 836 0074 002E     		cmp	r6, #0
 837 0076 11D1     		bne	.L60
 838              	.L61:
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 839              		.loc 1 464 0
 840 0078 1302     		lsls	r3, r2, #8
 841 007a 9C46     		mov	ip, r3
 842              	.LVL88:
 465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 843              		.loc 1 465 0
 844 007c 134B     		ldr	r3, .L64+12
 845              	.LVL89:
 846 007e 9846     		mov	r8, r3
 847 0080 1919     		adds	r1, r3, r4
 848 0082 0B79     		ldrb	r3, [r1, #4]
 849 0084 6746     		mov	r7, ip
 850 0086 3B43     		orrs	r3, r7
 851              	.LVL90:
 468:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 852              		.loc 1 468 0
 853 0088 C018     		adds	r0, r0, r3
 854              	.LVL91:
 471:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 855              		.loc 1 471 0
 856 008a 801A     		subs	r0, r0, r2
 857              	.LVL92:
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 858              		.loc 1 474 0
 859 008c 020A     		lsrs	r2, r0, #8
 860 008e 6300     		lsls	r3, r4, #1
 861 0090 4746     		mov	r7, r8
 862 0092 FA52     		strh	r2, [r7, r3]
 475:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 863              		.loc 1 475 0
 864 0094 0871     		strb	r0, [r1, #4]
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 865              		.loc 1 477 0
 866 0096 0022     		movs	r2, #0
 867 0098 0D4B     		ldr	r3, .L64+16
 868 009a 1A55     		strb	r2, [r3, r4]
 869              	.LVL93:
 870              	.L60:
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 871              		.loc 1 484 0
 872 009c 032D     		cmp	r5, #3
 873 009e 06D9     		bls	.L62
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 874              		.loc 1 484 0 is_stmt 0 discriminator 1
 875 00a0 002E     		cmp	r6, #0
 876 00a2 04D0     		beq	.L62
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 877              		.loc 1 497 0 is_stmt 1
 878 00a4 6400     		lsls	r4, r4, #1
 879              	.LVL94:
 880 00a6 094B     		ldr	r3, .L64+12
 881 00a8 1C19     		adds	r4, r3, r4
 882 00aa 2581     		strh	r5, [r4, #8]
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 61


 883 00ac 04E0     		b	.L54
 884              	.LVL95:
 885              	.L62:
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 886              		.loc 1 503 0
 887 00ae 6400     		lsls	r4, r4, #1
 888              	.LVL96:
 889 00b0 064B     		ldr	r3, .L64+12
 890 00b2 1C19     		adds	r4, r3, r4
 891 00b4 0023     		movs	r3, #0
 892 00b6 2381     		strh	r3, [r4, #8]
 893              	.L54:
 510:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 894              		.loc 1 510 0
 895              		@ sp needed
 896              	.LVL97:
 897              	.LVL98:
 898 00b8 04BC     		pop	{r2}
 899 00ba 9046     		mov	r8, r2
 900 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 901              	.L65:
 902 00be C046     		.align	2
 903              	.L64:
 904 00c0 00000000 		.word	CapSense_sensorRaw
 905 00c4 00000000 		.word	.LANCHOR1
 906 00c8 00000000 		.word	CapSense_rawFilterData1
 907 00cc 00000000 		.word	.LANCHOR0
 908 00d0 00000000 		.word	CapSense_lowBaselineResetCnt
 909              		.cfi_endproc
 910              	.LFE38:
 911              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 912              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 913              		.align	2
 914              		.global	CapSense_UpdateSensorBaseline
 915              		.code	16
 916              		.thumb_func
 917              		.type	CapSense_UpdateSensorBaseline, %function
 918              	CapSense_UpdateSensorBaseline:
 919              	.LFB39:
 544:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 920              		.loc 1 544 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              	.LVL99:
 925 0000 10B5     		push	{r4, lr}
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 4, -8
 928              		.cfi_offset 14, -4
 559:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 929              		.loc 1 559 0
 930 0002 FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 931              	.LVL100:
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 932              		.loc 1 565 0
 933              		@ sp needed
 934 0006 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 62


 935              		.cfi_endproc
 936              	.LFE39:
 937              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 938              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 939              		.align	2
 940              		.global	CapSense_UpdateEnabledBaselines
 941              		.code	16
 942              		.thumb_func
 943              		.type	CapSense_UpdateEnabledBaselines, %function
 944              	CapSense_UpdateEnabledBaselines:
 945              	.LFB40:
 598:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 946              		.loc 1 598 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950 0000 10B5     		push	{r4, lr}
 951              		.cfi_def_cfa_offset 8
 952              		.cfi_offset 4, -8
 953              		.cfi_offset 14, -4
 954              	.LVL101:
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 955              		.loc 1 602 0
 956 0002 0024     		movs	r4, #0
 957 0004 09E0     		b	.L68
 958              	.LVL102:
 959              	.L70:
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 960              		.loc 1 604 0
 961 0006 2100     		movs	r1, r4
 962 0008 0548     		ldr	r0, .L71
 963 000a FFF7FEFF 		bl	CapSense_GetBitValue
 964              	.LVL103:
 606:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 965              		.loc 1 606 0
 966 000e 0028     		cmp	r0, #0
 967 0010 02D0     		beq	.L69
 608:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 968              		.loc 1 608 0
 969 0012 2000     		movs	r0, r4
 970              	.LVL104:
 971 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 972              	.LVL105:
 973              	.L69:
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 974              		.loc 1 602 0 discriminator 2
 975 0018 0134     		adds	r4, r4, #1
 976              	.LVL106:
 977              	.L68:
 602:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 978              		.loc 1 602 0 is_stmt 0 discriminator 1
 979 001a 002C     		cmp	r4, #0
 980 001c F3D0     		beq	.L70
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 981              		.loc 1 611 0 is_stmt 1
 982              		@ sp needed
 983              	.LVL107:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 63


 984 001e 10BD     		pop	{r4, pc}
 985              	.L72:
 986              		.align	2
 987              	.L71:
 988 0020 00000000 		.word	CapSense_sensorEnableMask
 989              		.cfi_endproc
 990              	.LFE40:
 991              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 992              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 993              		.align	2
 994              		.global	CapSense_UpdateWidgetBaseline
 995              		.code	16
 996              		.thumb_func
 997              		.type	CapSense_UpdateWidgetBaseline, %function
 998              	CapSense_UpdateWidgetBaseline:
 999              	.LFB41:
 643:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1000              		.loc 1 643 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              	.LVL108:
 1005 0000 10B5     		push	{r4, lr}
 1006              		.cfi_def_cfa_offset 8
 1007              		.cfi_offset 4, -8
 1008              		.cfi_offset 14, -4
 1009              	.LVL109:
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1010              		.loc 1 659 0
 1011 0002 0024     		movs	r4, #0
 1012 0004 09E0     		b	.L74
 1013              	.LVL110:
 1014              	.L76:
 661:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1015              		.loc 1 661 0
 1016 0006 2100     		movs	r1, r4
 1017 0008 0548     		ldr	r0, .L77
 1018 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1019              	.LVL111:
 663:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1020              		.loc 1 663 0
 1021 000e 0028     		cmp	r0, #0
 1022 0010 02D0     		beq	.L75
 665:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1023              		.loc 1 665 0
 1024 0012 2000     		movs	r0, r4
 1025              	.LVL112:
 1026 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1027              	.LVL113:
 1028              	.L75:
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1029              		.loc 1 659 0 discriminator 2
 1030 0018 0134     		adds	r4, r4, #1
 1031              	.LVL114:
 1032              	.L74:
 659:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1033              		.loc 1 659 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 64


 1034 001a 002C     		cmp	r4, #0
 1035 001c F3D0     		beq	.L76
 668:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1036              		.loc 1 668 0 is_stmt 1
 1037              		@ sp needed
 1038              	.LVL115:
 1039 001e 10BD     		pop	{r4, pc}
 1040              	.L78:
 1041              		.align	2
 1042              	.L77:
 1043 0020 00000000 		.word	CapSense_sensorEnableMask
 1044              		.cfi_endproc
 1045              	.LFE41:
 1046              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1047              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1048              		.align	2
 1049              		.global	CapSense_GetWidgetNumber
 1050              		.code	16
 1051              		.thumb_func
 1052              		.type	CapSense_GetWidgetNumber, %function
 1053              	CapSense_GetWidgetNumber:
 1054              	.LFB56:
2503:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2506:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2507:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2508:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2526:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2531:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2534:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2537:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 65


2538:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2539:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2545:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2548:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2552:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2553:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2554:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2576:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2579:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2580:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2583:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2584:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2585:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2588:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2589:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2590:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2591:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 66


2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2611:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2616:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2617:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2619:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2620:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2621:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2622:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2625:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2626:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2628:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2629:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2648:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 67


2652:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2653:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2656:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2657:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2658:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2659:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2660:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2666:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2679:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2690:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2692:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2697:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2701:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2702:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2704:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2706:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2707:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2708:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 68


2709:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2711:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2712:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2713:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2714:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2715:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2716:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2717:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2718:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2719:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2720:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2722:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2723:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2724:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2725:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2726:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1055              		.loc 1 2726 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		@ link register save eliminated.
 1060              	.LVL116:
2727:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 1061              		.loc 1 2727 0
 1062 0000 014B     		ldr	r3, .L80
 1063 0002 185C     		ldrb	r0, [r3, r0]
 1064              	.LVL117:
2728:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1065              		.loc 1 2728 0
 1066              		@ sp needed
 1067 0004 7047     		bx	lr
 1068              	.L81:
 1069 0006 C046     		.align	2
 1070              	.L80:
 1071 0008 00000000 		.word	CapSense_widgetNumber
 1072              		.cfi_endproc
 1073              	.LFE56:
 1074              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 1075              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 1076              		.align	2
 1077              		.global	CapSense_GetLowBaselineReset
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	CapSense_GetLowBaselineReset, %function
 1081              	CapSense_GetLowBaselineReset:
 1082              	.LFB57:
2729:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2730:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 69


2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2749:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1083              		.loc 1 2752 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              	.LVL118:
2753:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 1089              		.loc 1 2753 0
 1090 0000 014B     		ldr	r3, .L83
 1091 0002 1818     		adds	r0, r3, r0
 1092              	.LVL119:
 1093 0004 0079     		ldrb	r0, [r0, #4]
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1094              		.loc 1 2754 0
 1095              		@ sp needed
 1096 0006 7047     		bx	lr
 1097              	.L84:
 1098              		.align	2
 1099              	.L83:
 1100 0008 00000000 		.word	.LANCHOR1
 1101              		.cfi_endproc
 1102              	.LFE57:
 1103              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 1104              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 1105              		.align	2
 1106              		.global	CapSense_GetDebounce
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	CapSense_GetDebounce, %function
 1110              	CapSense_GetDebounce:
 1111              	.LFB58:
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2758:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 70


2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2778:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 1112              		.loc 1 2778 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117              	.LVL120:
2779:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1118              		.loc 1 2780 0
 1119 0000 0220     		movs	r0, #2
 1120              	.LVL121:
 1121              		@ sp needed
 1122 0002 7047     		bx	lr
 1123              		.cfi_endproc
 1124              	.LFE58:
 1125              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 1126              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 1127              		.align	2
 1128              		.global	CapSense_EnableRawDataFilters
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CapSense_EnableRawDataFilters, %function
 1132              	CapSense_EnableRawDataFilters:
 1133              	.LFB59:
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2783:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2784:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2785:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2786:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2787:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2788:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2789:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2790:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2791:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2792:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2793:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2794:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2795:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2796:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2797:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2798:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2799:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2800:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 71


2801:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2802:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2803:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
2804:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1134              		.loc 1 2804 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
2805:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 1139              		.loc 1 2805 0
 1140 0000 0122     		movs	r2, #1
 1141 0002 014B     		ldr	r3, .L87
 1142 0004 1A70     		strb	r2, [r3]
2806:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1143              		.loc 1 2806 0
 1144              		@ sp needed
 1145 0006 7047     		bx	lr
 1146              	.L88:
 1147              		.align	2
 1148              	.L87:
 1149 0008 00000000 		.word	.LANCHOR1
 1150              		.cfi_endproc
 1151              	.LFE59:
 1152              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 1153              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 1154              		.align	2
 1155              		.global	CapSense_DisableRawDataFilters
 1156              		.code	16
 1157              		.thumb_func
 1158              		.type	CapSense_DisableRawDataFilters, %function
 1159              	CapSense_DisableRawDataFilters:
 1160              	.LFB60:
2807:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2808:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2809:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2811:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2812:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2813:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1161              		.loc 1 2829 0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 72


 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 0
 1164              		@ frame_needed = 0, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 1166              		.loc 1 2830 0
 1167 0000 0022     		movs	r2, #0
 1168 0002 014B     		ldr	r3, .L90
 1169 0004 1A70     		strb	r2, [r3]
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1170              		.loc 1 2831 0
 1171              		@ sp needed
 1172 0006 7047     		bx	lr
 1173              	.L91:
 1174              		.align	2
 1175              	.L90:
 1176 0008 00000000 		.word	.LANCHOR1
 1177              		.cfi_endproc
 1178              	.LFE60:
 1179              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 1180              		.global	CapSense_numberOfSensors
 1181              		.global	CapSense_rawDataIndex
 1182              		.global	CapSense_debounce
 1183              		.global	CapSense_hysteresis
 1184              		.global	CapSense_noiseThreshold
 1185              		.global	CapSense_fingerThreshold
 1186              		.global	CapSense_enableRawFilters
 1187              		.global	CapSense_lowBaselineReset
 1188              		.comm	CapSense_lowBaselineResetCnt,1,4
 1189              		.global	CapSense_sensorOnMask
 1190              		.global	CapSense_sensorSignal
 1191              		.global	CapSense_sensorBaselineLow
 1192              		.global	CapSense_sensorBaseline
 1193              		.comm	CapSense_rawFilterData1,2,4
 1194              		.section	.rodata
 1195              		.align	2
 1196              		.type	CapSense_numberOfSensors, %object
 1197              		.size	CapSense_numberOfSensors, 1
 1198              	CapSense_numberOfSensors:
 1199 0000 01       		.byte	1
 1200 0001 000000   		.space	3
 1201              		.type	CapSense_rawDataIndex, %object
 1202              		.size	CapSense_rawDataIndex, 1
 1203              	CapSense_rawDataIndex:
 1204 0004 00       		.space	1
 1205 0005 000000   		.space	3
 1206              		.type	CapSense_debounce, %object
 1207              		.size	CapSense_debounce, 1
 1208              	CapSense_debounce:
 1209 0008 02       		.byte	2
 1210 0009 000000   		.space	3
 1211              		.type	CapSense_hysteresis, %object
 1212              		.size	CapSense_hysteresis, 2
 1213              	CapSense_hysteresis:
 1214 000c 0A00     		.short	10
 1215 000e 0000     		.space	2
 1216              		.type	CapSense_noiseThreshold, %object
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 73


 1217              		.size	CapSense_noiseThreshold, 2
 1218              	CapSense_noiseThreshold:
 1219 0010 0300     		.short	3
 1220 0012 0000     		.space	2
 1221              		.type	CapSense_fingerThreshold, %object
 1222              		.size	CapSense_fingerThreshold, 2
 1223              	CapSense_fingerThreshold:
 1224 0014 3200     		.short	50
 1225              		.data
 1226              		.align	2
 1227              		.set	.LANCHOR1,. + 0
 1228              		.type	CapSense_enableRawFilters, %object
 1229              		.size	CapSense_enableRawFilters, 1
 1230              	CapSense_enableRawFilters:
 1231 0000 01       		.byte	1
 1232 0001 000000   		.space	3
 1233              		.type	CapSense_lowBaselineReset, %object
 1234              		.size	CapSense_lowBaselineReset, 1
 1235              	CapSense_lowBaselineReset:
 1236 0004 05       		.byte	5
 1237              		.bss
 1238              		.align	2
 1239              		.set	.LANCHOR0,. + 0
 1240              		.type	CapSense_sensorBaseline, %object
 1241              		.size	CapSense_sensorBaseline, 2
 1242              	CapSense_sensorBaseline:
 1243 0000 0000     		.space	2
 1244 0002 0000     		.space	2
 1245              		.type	CapSense_sensorBaselineLow, %object
 1246              		.size	CapSense_sensorBaselineLow, 1
 1247              	CapSense_sensorBaselineLow:
 1248 0004 00       		.space	1
 1249 0005 000000   		.space	3
 1250              		.type	CapSense_sensorSignal, %object
 1251              		.size	CapSense_sensorSignal, 2
 1252              	CapSense_sensorSignal:
 1253 0008 0000     		.space	2
 1254 000a 0000     		.space	2
 1255              		.type	CapSense_debounceCounter, %object
 1256              		.size	CapSense_debounceCounter, 2
 1257              	CapSense_debounceCounter:
 1258 000c 0000     		.space	2
 1259 000e 0000     		.space	2
 1260              		.type	CapSense_sensorOnMask, %object
 1261              		.size	CapSense_sensorOnMask, 1
 1262              	CapSense_sensorOnMask:
 1263 0010 00       		.space	1
 1264              		.text
 1265              	.Letext0:
 1266              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1267              		.file 3 "Generated_Source\\PSoC4\\CapSense.h"
 1268              		.file 4 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 1269              		.section	.debug_info,"",%progbits
 1270              	.Ldebug_info0:
 1271 0000 040A0000 		.4byte	0xa04
 1272 0004 0400     		.2byte	0x4
 1273 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 74


 1274 000a 04       		.byte	0x4
 1275 000b 01       		.uleb128 0x1
 1276 000c 4F010000 		.4byte	.LASF87
 1277 0010 0C       		.byte	0xc
 1278 0011 6F060000 		.4byte	.LASF88
 1279 0015 92030000 		.4byte	.LASF89
 1280 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1281 001d 00000000 		.4byte	0
 1282 0021 00000000 		.4byte	.Ldebug_line0
 1283 0025 02       		.uleb128 0x2
 1284 0026 01       		.byte	0x1
 1285 0027 06       		.byte	0x6
 1286 0028 86030000 		.4byte	.LASF0
 1287 002c 02       		.uleb128 0x2
 1288 002d 01       		.byte	0x1
 1289 002e 08       		.byte	0x8
 1290 002f 5F030000 		.4byte	.LASF1
 1291 0033 02       		.uleb128 0x2
 1292 0034 02       		.byte	0x2
 1293 0035 05       		.byte	0x5
 1294 0036 83000000 		.4byte	.LASF2
 1295 003a 02       		.uleb128 0x2
 1296 003b 02       		.byte	0x2
 1297 003c 07       		.byte	0x7
 1298 003d 77050000 		.4byte	.LASF3
 1299 0041 02       		.uleb128 0x2
 1300 0042 04       		.byte	0x4
 1301 0043 05       		.byte	0x5
 1302 0044 89020000 		.4byte	.LASF4
 1303 0048 02       		.uleb128 0x2
 1304 0049 04       		.byte	0x4
 1305 004a 07       		.byte	0x7
 1306 004b B4050000 		.4byte	.LASF5
 1307 004f 02       		.uleb128 0x2
 1308 0050 08       		.byte	0x8
 1309 0051 05       		.byte	0x5
 1310 0052 7B020000 		.4byte	.LASF6
 1311 0056 02       		.uleb128 0x2
 1312 0057 08       		.byte	0x8
 1313 0058 07       		.byte	0x7
 1314 0059 F9030000 		.4byte	.LASF7
 1315 005d 03       		.uleb128 0x3
 1316 005e 04       		.byte	0x4
 1317 005f 05       		.byte	0x5
 1318 0060 696E7400 		.ascii	"int\000"
 1319 0064 02       		.uleb128 0x2
 1320 0065 04       		.byte	0x4
 1321 0066 07       		.byte	0x7
 1322 0067 10040000 		.4byte	.LASF8
 1323 006b 04       		.uleb128 0x4
 1324 006c 1F020000 		.4byte	.LASF9
 1325 0070 02       		.byte	0x2
 1326 0071 E401     		.2byte	0x1e4
 1327 0073 2C000000 		.4byte	0x2c
 1328 0077 04       		.uleb128 0x4
 1329 0078 58050000 		.4byte	.LASF10
 1330 007c 02       		.byte	0x2
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 75


 1331 007d E501     		.2byte	0x1e5
 1332 007f 3A000000 		.4byte	0x3a
 1333 0083 04       		.uleb128 0x4
 1334 0084 AD050000 		.4byte	.LASF11
 1335 0088 02       		.byte	0x2
 1336 0089 E601     		.2byte	0x1e6
 1337 008b 48000000 		.4byte	0x48
 1338 008f 02       		.uleb128 0x2
 1339 0090 04       		.byte	0x4
 1340 0091 04       		.byte	0x4
 1341 0092 70020000 		.4byte	.LASF12
 1342 0096 02       		.uleb128 0x2
 1343 0097 08       		.byte	0x8
 1344 0098 04       		.byte	0x4
 1345 0099 EB060000 		.4byte	.LASF13
 1346 009d 02       		.uleb128 0x2
 1347 009e 01       		.byte	0x1
 1348 009f 08       		.byte	0x8
 1349 00a0 AD040000 		.4byte	.LASF14
 1350 00a4 02       		.uleb128 0x2
 1351 00a5 04       		.byte	0x4
 1352 00a6 07       		.byte	0x7
 1353 00a7 B2040000 		.4byte	.LASF15
 1354 00ab 02       		.uleb128 0x2
 1355 00ac 08       		.byte	0x8
 1356 00ad 04       		.byte	0x4
 1357 00ae 3F030000 		.4byte	.LASF16
 1358 00b2 05       		.uleb128 0x5
 1359 00b3 6B000000 		.4byte	0x6b
 1360 00b7 06       		.uleb128 0x6
 1361 00b8 82070000 		.4byte	.LASF17
 1362 00bc 01       		.byte	0x1
 1363 00bd 8A       		.byte	0x8a
 1364 00be 00000000 		.4byte	.LFB34
 1365 00c2 38000000 		.4byte	.LFE34-.LFB34
 1366 00c6 01       		.uleb128 0x1
 1367 00c7 9C       		.byte	0x9c
 1368 00c8 EB000000 		.4byte	0xeb
 1369 00cc 07       		.uleb128 0x7
 1370 00cd FB010000 		.4byte	.LASF19
 1371 00d1 01       		.byte	0x1
 1372 00d2 8A       		.byte	0x8a
 1373 00d3 83000000 		.4byte	0x83
 1374 00d7 00000000 		.4byte	.LLST0
 1375 00db 08       		.uleb128 0x8
 1376 00dc CC000000 		.4byte	.LASF21
 1377 00e0 01       		.byte	0x1
 1378 00e1 8E       		.byte	0x8e
 1379 00e2 6B000000 		.4byte	0x6b
 1380 00e6 21000000 		.4byte	.LLST1
 1381 00ea 00       		.byte	0
 1382 00eb 06       		.uleb128 0x6
 1383 00ec 94070000 		.4byte	.LASF18
 1384 00f0 01       		.byte	0x1
 1385 00f1 D6       		.byte	0xd6
 1386 00f2 00000000 		.4byte	.LFB35
 1387 00f6 18000000 		.4byte	.LFE35-.LFB35
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 76


 1388 00fa 01       		.uleb128 0x1
 1389 00fb 9C       		.byte	0x9c
 1390 00fc 3D010000 		.4byte	0x13d
 1391 0100 07       		.uleb128 0x7
 1392 0101 FB010000 		.4byte	.LASF19
 1393 0105 01       		.byte	0x1
 1394 0106 D6       		.byte	0xd6
 1395 0107 83000000 		.4byte	0x83
 1396 010b 34000000 		.4byte	.LLST2
 1397 010f 09       		.uleb128 0x9
 1398 0110 08000000 		.4byte	.LVL5
 1399 0114 D0090000 		.4byte	0x9d0
 1400 0118 23010000 		.4byte	0x123
 1401 011c 0A       		.uleb128 0xa
 1402 011d 01       		.uleb128 0x1
 1403 011e 50       		.byte	0x50
 1404 011f 02       		.uleb128 0x2
 1405 0120 74       		.byte	0x74
 1406 0121 00       		.sleb128 0
 1407 0122 00       		.byte	0
 1408 0123 0B       		.uleb128 0xb
 1409 0124 0C000000 		.4byte	.LVL6
 1410 0128 DB090000 		.4byte	0x9db
 1411 012c 0C       		.uleb128 0xc
 1412 012d 16000000 		.4byte	.LVL7
 1413 0131 B7000000 		.4byte	0xb7
 1414 0135 0A       		.uleb128 0xa
 1415 0136 01       		.uleb128 0x1
 1416 0137 50       		.byte	0x50
 1417 0138 02       		.uleb128 0x2
 1418 0139 74       		.byte	0x74
 1419 013a 00       		.sleb128 0
 1420 013b 00       		.byte	0
 1421 013c 00       		.byte	0
 1422 013d 06       		.uleb128 0x6
 1423 013e E3040000 		.4byte	.LASF20
 1424 0142 01       		.byte	0x1
 1425 0143 FB       		.byte	0xfb
 1426 0144 00000000 		.4byte	.LFB36
 1427 0148 14000000 		.4byte	.LFE36-.LFB36
 1428 014c 01       		.uleb128 0x1
 1429 014d 9C       		.byte	0x9c
 1430 014e 70010000 		.4byte	0x170
 1431 0152 0D       		.uleb128 0xd
 1432 0153 6900     		.ascii	"i\000"
 1433 0155 01       		.byte	0x1
 1434 0156 FD       		.byte	0xfd
 1435 0157 83000000 		.4byte	0x83
 1436 015b 60000000 		.4byte	.LLST3
 1437 015f 0C       		.uleb128 0xc
 1438 0160 0C000000 		.4byte	.LVL11
 1439 0164 EB000000 		.4byte	0xeb
 1440 0168 0A       		.uleb128 0xa
 1441 0169 01       		.uleb128 0x1
 1442 016a 50       		.byte	0x50
 1443 016b 02       		.uleb128 0x2
 1444 016c 74       		.byte	0x74
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 77


 1445 016d 00       		.sleb128 0
 1446 016e 00       		.byte	0
 1447 016f 00       		.byte	0
 1448 0170 0E       		.uleb128 0xe
 1449 0171 1D040000 		.4byte	.LASF22
 1450 0175 01       		.byte	0x1
 1451 0176 1E01     		.2byte	0x11e
 1452 0178 00000000 		.4byte	.LFB37
 1453 017c 30000000 		.4byte	.LFE37-.LFB37
 1454 0180 01       		.uleb128 0x1
 1455 0181 9C       		.byte	0x9c
 1456 0182 DB010000 		.4byte	0x1db
 1457 0186 0F       		.uleb128 0xf
 1458 0187 6900     		.ascii	"i\000"
 1459 0189 01       		.byte	0x1
 1460 018a 2001     		.2byte	0x120
 1461 018c 83000000 		.4byte	0x83
 1462 0190 7F000000 		.4byte	.LLST4
 1463 0194 10       		.uleb128 0x10
 1464 0195 9D040000 		.4byte	.LASF23
 1465 0199 01       		.byte	0x1
 1466 019a 2101     		.2byte	0x121
 1467 019c 83000000 		.4byte	0x83
 1468 01a0 92000000 		.4byte	.LLST5
 1469 01a4 0B       		.uleb128 0xb
 1470 01a5 06000000 		.4byte	.LVL14
 1471 01a9 E6090000 		.4byte	0x9e6
 1472 01ad 0B       		.uleb128 0xb
 1473 01ae 0A000000 		.4byte	.LVL15
 1474 01b2 DB090000 		.4byte	0x9db
 1475 01b6 09       		.uleb128 0x9
 1476 01b7 1A000000 		.4byte	.LVL17
 1477 01bb F1090000 		.4byte	0x9f1
 1478 01bf CA010000 		.4byte	0x1ca
 1479 01c3 0A       		.uleb128 0xa
 1480 01c4 01       		.uleb128 0x1
 1481 01c5 51       		.byte	0x51
 1482 01c6 02       		.uleb128 0x2
 1483 01c7 74       		.byte	0x74
 1484 01c8 00       		.sleb128 0
 1485 01c9 00       		.byte	0
 1486 01ca 0C       		.uleb128 0xc
 1487 01cb 24000000 		.4byte	.LVL19
 1488 01cf B7000000 		.4byte	0xb7
 1489 01d3 0A       		.uleb128 0xa
 1490 01d4 01       		.uleb128 0x1
 1491 01d5 50       		.byte	0x50
 1492 01d6 02       		.uleb128 0x2
 1493 01d7 74       		.byte	0x74
 1494 01d8 00       		.sleb128 0
 1495 01d9 00       		.byte	0
 1496 01da 00       		.byte	0
 1497 01db 11       		.uleb128 0x11
 1498 01dc 3C070000 		.4byte	.LASF26
 1499 01e0 01       		.byte	0x1
 1500 01e1 B302     		.2byte	0x2b3
 1501 01e3 77000000 		.4byte	0x77
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 78


 1502 01e7 00000000 		.4byte	.LFB42
 1503 01eb 0C000000 		.4byte	.LFE42-.LFB42
 1504 01ef 01       		.uleb128 0x1
 1505 01f0 9C       		.byte	0x9c
 1506 01f1 06020000 		.4byte	0x206
 1507 01f5 12       		.uleb128 0x12
 1508 01f6 FB010000 		.4byte	.LASF19
 1509 01fa 01       		.byte	0x1
 1510 01fb B302     		.2byte	0x2b3
 1511 01fd 83000000 		.4byte	0x83
 1512 0201 A5000000 		.4byte	.LLST6
 1513 0205 00       		.byte	0
 1514 0206 0E       		.uleb128 0xe
 1515 0207 6D030000 		.4byte	.LASF24
 1516 020b 01       		.byte	0x1
 1517 020c CE02     		.2byte	0x2ce
 1518 020e 00000000 		.4byte	.LFB43
 1519 0212 0C000000 		.4byte	.LFE43-.LFB43
 1520 0216 01       		.uleb128 0x1
 1521 0217 9C       		.byte	0x9c
 1522 0218 3B020000 		.4byte	0x23b
 1523 021c 12       		.uleb128 0x12
 1524 021d FB010000 		.4byte	.LASF19
 1525 0221 01       		.byte	0x1
 1526 0222 CE02     		.2byte	0x2ce
 1527 0224 83000000 		.4byte	0x83
 1528 0228 C6000000 		.4byte	.LLST7
 1529 022c 13       		.uleb128 0x13
 1530 022d E7000000 		.4byte	.LASF25
 1531 0231 01       		.byte	0x1
 1532 0232 CE02     		.2byte	0x2ce
 1533 0234 77000000 		.4byte	0x77
 1534 0238 01       		.uleb128 0x1
 1535 0239 51       		.byte	0x51
 1536 023a 00       		.byte	0
 1537 023b 11       		.uleb128 0x11
 1538 023c 23050000 		.4byte	.LASF27
 1539 0240 01       		.byte	0x1
 1540 0241 E902     		.2byte	0x2e9
 1541 0243 77000000 		.4byte	0x77
 1542 0247 00000000 		.4byte	.LFB44
 1543 024b 10000000 		.4byte	.LFE44-.LFB44
 1544 024f 01       		.uleb128 0x1
 1545 0250 9C       		.byte	0x9c
 1546 0251 66020000 		.4byte	0x266
 1547 0255 12       		.uleb128 0x12
 1548 0256 FB010000 		.4byte	.LASF19
 1549 025a 01       		.byte	0x1
 1550 025b E902     		.2byte	0x2e9
 1551 025d 83000000 		.4byte	0x83
 1552 0261 E7000000 		.4byte	.LLST8
 1553 0265 00       		.byte	0
 1554 0266 0E       		.uleb128 0xe
 1555 0267 22070000 		.4byte	.LASF28
 1556 026b 01       		.byte	0x1
 1557 026c 0403     		.2byte	0x304
 1558 026e 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 79


 1559 0272 10000000 		.4byte	.LFE45-.LFB45
 1560 0276 01       		.uleb128 0x1
 1561 0277 9C       		.byte	0x9c
 1562 0278 9B020000 		.4byte	0x29b
 1563 027c 12       		.uleb128 0x12
 1564 027d FB010000 		.4byte	.LASF19
 1565 0281 01       		.byte	0x1
 1566 0282 0403     		.2byte	0x304
 1567 0284 83000000 		.4byte	0x83
 1568 0288 08010000 		.4byte	.LLST9
 1569 028c 13       		.uleb128 0x13
 1570 028d 49010000 		.4byte	.LASF29
 1571 0291 01       		.byte	0x1
 1572 0292 0403     		.2byte	0x304
 1573 0294 77000000 		.4byte	0x77
 1574 0298 01       		.uleb128 0x1
 1575 0299 51       		.byte	0x51
 1576 029a 00       		.byte	0
 1577 029b 11       		.uleb128 0x11
 1578 029c C7040000 		.4byte	.LASF30
 1579 02a0 01       		.byte	0x1
 1580 02a1 1F03     		.2byte	0x31f
 1581 02a3 77000000 		.4byte	0x77
 1582 02a7 00000000 		.4byte	.LFB46
 1583 02ab 04000000 		.4byte	.LFE46-.LFB46
 1584 02af 01       		.uleb128 0x1
 1585 02b0 9C       		.byte	0x9c
 1586 02b1 C6020000 		.4byte	0x2c6
 1587 02b5 12       		.uleb128 0x12
 1588 02b6 CC000000 		.4byte	.LASF21
 1589 02ba 01       		.byte	0x1
 1590 02bb 1F03     		.2byte	0x31f
 1591 02bd 83000000 		.4byte	0x83
 1592 02c1 29010000 		.4byte	.LLST10
 1593 02c5 00       		.byte	0
 1594 02c6 11       		.uleb128 0x11
 1595 02c7 57040000 		.4byte	.LASF31
 1596 02cb 01       		.byte	0x1
 1597 02cc 3A03     		.2byte	0x33a
 1598 02ce 77000000 		.4byte	0x77
 1599 02d2 00000000 		.4byte	.LFB47
 1600 02d6 04000000 		.4byte	.LFE47-.LFB47
 1601 02da 01       		.uleb128 0x1
 1602 02db 9C       		.byte	0x9c
 1603 02dc F1020000 		.4byte	0x2f1
 1604 02e0 12       		.uleb128 0x12
 1605 02e1 CC000000 		.4byte	.LASF21
 1606 02e5 01       		.byte	0x1
 1607 02e6 3A03     		.2byte	0x33a
 1608 02e8 83000000 		.4byte	0x83
 1609 02ec 4A010000 		.4byte	.LLST11
 1610 02f0 00       		.byte	0
 1611 02f1 11       		.uleb128 0x11
 1612 02f2 E1020000 		.4byte	.LASF32
 1613 02f6 01       		.byte	0x1
 1614 02f7 5603     		.2byte	0x356
 1615 02f9 77000000 		.4byte	0x77
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 80


 1616 02fd 00000000 		.4byte	.LFB48
 1617 0301 04000000 		.4byte	.LFE48-.LFB48
 1618 0305 01       		.uleb128 0x1
 1619 0306 9C       		.byte	0x9c
 1620 0307 1C030000 		.4byte	0x31c
 1621 030b 12       		.uleb128 0x12
 1622 030c CC000000 		.4byte	.LASF21
 1623 0310 01       		.byte	0x1
 1624 0311 5603     		.2byte	0x356
 1625 0313 83000000 		.4byte	0x83
 1626 0317 6B010000 		.4byte	.LLST12
 1627 031b 00       		.byte	0
 1628 031c 11       		.uleb128 0x11
 1629 031d AF060000 		.4byte	.LASF33
 1630 0321 01       		.byte	0x1
 1631 0322 7203     		.2byte	0x372
 1632 0324 77000000 		.4byte	0x77
 1633 0328 00000000 		.4byte	.LFB49
 1634 032c 04000000 		.4byte	.LFE49-.LFB49
 1635 0330 01       		.uleb128 0x1
 1636 0331 9C       		.byte	0x9c
 1637 0332 47030000 		.4byte	0x347
 1638 0336 12       		.uleb128 0x12
 1639 0337 CC000000 		.4byte	.LASF21
 1640 033b 01       		.byte	0x1
 1641 033c 7203     		.2byte	0x372
 1642 033e 83000000 		.4byte	0x83
 1643 0342 8C010000 		.4byte	.LLST13
 1644 0346 00       		.byte	0
 1645 0347 11       		.uleb128 0x11
 1646 0348 00000000 		.4byte	.LASF34
 1647 034c 01       		.byte	0x1
 1648 034d 4E04     		.2byte	0x44e
 1649 034f 83000000 		.4byte	0x83
 1650 0353 00000000 		.4byte	.LFB50
 1651 0357 84000000 		.4byte	.LFE50-.LFB50
 1652 035b 01       		.uleb128 0x1
 1653 035c 9C       		.byte	0x9c
 1654 035d 30040000 		.4byte	0x430
 1655 0361 12       		.uleb128 0x12
 1656 0362 FB010000 		.4byte	.LASF19
 1657 0366 01       		.byte	0x1
 1658 0367 4E04     		.2byte	0x44e
 1659 0369 83000000 		.4byte	0x83
 1660 036d AD010000 		.4byte	.LLST14
 1661 0371 10       		.uleb128 0x10
 1662 0372 CC000000 		.4byte	.LASF21
 1663 0376 01       		.byte	0x1
 1664 0377 5004     		.2byte	0x450
 1665 0379 6B000000 		.4byte	0x6b
 1666 037d E4010000 		.4byte	.LLST15
 1667 0381 14       		.uleb128 0x14
 1668 0382 92020000 		.4byte	.LASF35
 1669 0386 01       		.byte	0x1
 1670 0387 5104     		.2byte	0x451
 1671 0389 6B000000 		.4byte	0x6b
 1672 038d 02       		.byte	0x2
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 81


 1673 038e 10       		.uleb128 0x10
 1674 038f B5000000 		.4byte	.LASF36
 1675 0393 01       		.byte	0x1
 1676 0394 5204     		.2byte	0x452
 1677 0396 6B000000 		.4byte	0x6b
 1678 039a E4010000 		.4byte	.LLST15
 1679 039e 14       		.uleb128 0x14
 1680 039f 55070000 		.4byte	.LASF37
 1681 03a3 01       		.byte	0x1
 1682 03a4 5404     		.2byte	0x454
 1683 03a6 77000000 		.4byte	0x77
 1684 03aa 32       		.byte	0x32
 1685 03ab 14       		.uleb128 0x14
 1686 03ac 34030000 		.4byte	.LASF38
 1687 03b0 01       		.byte	0x1
 1688 03b1 5504     		.2byte	0x455
 1689 03b3 77000000 		.4byte	0x77
 1690 03b7 0A       		.byte	0xa
 1691 03b8 09       		.uleb128 0x9
 1692 03b9 12000000 		.4byte	.LVL41
 1693 03bd F1090000 		.4byte	0x9f1
 1694 03c1 D5030000 		.4byte	0x3d5
 1695 03c5 0A       		.uleb128 0xa
 1696 03c6 01       		.uleb128 0x1
 1697 03c7 50       		.byte	0x50
 1698 03c8 05       		.uleb128 0x5
 1699 03c9 03       		.byte	0x3
 1700 03ca 10000000 		.4byte	.LANCHOR0+16
 1701 03ce 0A       		.uleb128 0xa
 1702 03cf 01       		.uleb128 0x1
 1703 03d0 51       		.byte	0x51
 1704 03d1 02       		.uleb128 0x2
 1705 03d2 74       		.byte	0x74
 1706 03d3 00       		.sleb128 0
 1707 03d4 00       		.byte	0
 1708 03d5 09       		.uleb128 0x9
 1709 03d6 30000000 		.4byte	.LVL42
 1710 03da FC090000 		.4byte	0x9fc
 1711 03de F4030000 		.4byte	0x3f4
 1712 03e2 0A       		.uleb128 0xa
 1713 03e3 01       		.uleb128 0x1
 1714 03e4 50       		.byte	0x50
 1715 03e5 02       		.uleb128 0x2
 1716 03e6 76       		.byte	0x76
 1717 03e7 10       		.sleb128 16
 1718 03e8 0A       		.uleb128 0xa
 1719 03e9 01       		.uleb128 0x1
 1720 03ea 51       		.byte	0x51
 1721 03eb 02       		.uleb128 0x2
 1722 03ec 74       		.byte	0x74
 1723 03ed 00       		.sleb128 0
 1724 03ee 0A       		.uleb128 0xa
 1725 03ef 01       		.uleb128 0x1
 1726 03f0 52       		.byte	0x52
 1727 03f1 01       		.uleb128 0x1
 1728 03f2 30       		.byte	0x30
 1729 03f3 00       		.byte	0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 82


 1730 03f4 09       		.uleb128 0x9
 1731 03f5 5E000000 		.4byte	.LVL46
 1732 03f9 FC090000 		.4byte	0x9fc
 1733 03fd 16040000 		.4byte	0x416
 1734 0401 0A       		.uleb128 0xa
 1735 0402 01       		.uleb128 0x1
 1736 0403 50       		.byte	0x50
 1737 0404 05       		.uleb128 0x5
 1738 0405 03       		.byte	0x3
 1739 0406 10000000 		.4byte	.LANCHOR0+16
 1740 040a 0A       		.uleb128 0xa
 1741 040b 01       		.uleb128 0x1
 1742 040c 51       		.byte	0x51
 1743 040d 02       		.uleb128 0x2
 1744 040e 74       		.byte	0x74
 1745 040f 00       		.sleb128 0
 1746 0410 0A       		.uleb128 0xa
 1747 0411 01       		.uleb128 0x1
 1748 0412 52       		.byte	0x52
 1749 0413 01       		.uleb128 0x1
 1750 0414 31       		.byte	0x31
 1751 0415 00       		.byte	0
 1752 0416 0C       		.uleb128 0xc
 1753 0417 72000000 		.4byte	.LVL49
 1754 041b F1090000 		.4byte	0x9f1
 1755 041f 0A       		.uleb128 0xa
 1756 0420 01       		.uleb128 0x1
 1757 0421 50       		.byte	0x50
 1758 0422 05       		.uleb128 0x5
 1759 0423 03       		.byte	0x3
 1760 0424 10000000 		.4byte	.LANCHOR0+16
 1761 0428 0A       		.uleb128 0xa
 1762 0429 01       		.uleb128 0x1
 1763 042a 51       		.byte	0x51
 1764 042b 02       		.uleb128 0x2
 1765 042c 74       		.byte	0x74
 1766 042d 00       		.sleb128 0
 1767 042e 00       		.byte	0
 1768 042f 00       		.byte	0
 1769 0430 11       		.uleb128 0x11
 1770 0431 65070000 		.4byte	.LASF39
 1771 0435 01       		.byte	0x1
 1772 0436 A004     		.2byte	0x4a0
 1773 0438 83000000 		.4byte	0x83
 1774 043c 00000000 		.4byte	.LFB51
 1775 0440 10000000 		.4byte	.LFE51-.LFB51
 1776 0444 01       		.uleb128 0x1
 1777 0445 9C       		.byte	0x9c
 1778 0446 97040000 		.4byte	0x497
 1779 044a 12       		.uleb128 0x12
 1780 044b CC000000 		.4byte	.LASF21
 1781 044f 01       		.byte	0x1
 1782 0450 A004     		.2byte	0x4a0
 1783 0452 83000000 		.4byte	0x83
 1784 0456 0D020000 		.4byte	.LLST17
 1785 045a 10       		.uleb128 0x10
 1786 045b C3000000 		.4byte	.LASF40
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 83


 1787 045f 01       		.byte	0x1
 1788 0460 A204     		.2byte	0x4a2
 1789 0462 83000000 		.4byte	0x83
 1790 0466 2E020000 		.4byte	.LLST18
 1791 046a 14       		.uleb128 0x14
 1792 046b 0C010000 		.4byte	.LASF41
 1793 046f 01       		.byte	0x1
 1794 0470 A304     		.2byte	0x4a3
 1795 0472 83000000 		.4byte	0x83
 1796 0476 01       		.byte	0x1
 1797 0477 10       		.uleb128 0x10
 1798 0478 2E030000 		.4byte	.LASF42
 1799 047c 01       		.byte	0x1
 1800 047d A404     		.2byte	0x4a4
 1801 047f 83000000 		.4byte	0x83
 1802 0483 4E020000 		.4byte	.LLST19
 1803 0487 0C       		.uleb128 0xc
 1804 0488 08000000 		.4byte	.LVL54
 1805 048c 47030000 		.4byte	0x347
 1806 0490 0A       		.uleb128 0xa
 1807 0491 01       		.uleb128 0x1
 1808 0492 50       		.byte	0x50
 1809 0493 01       		.uleb128 0x1
 1810 0494 30       		.byte	0x30
 1811 0495 00       		.byte	0
 1812 0496 00       		.byte	0
 1813 0497 11       		.uleb128 0x11
 1814 0498 30000000 		.4byte	.LASF43
 1815 049c 01       		.byte	0x1
 1816 049d CE04     		.2byte	0x4ce
 1817 049f 83000000 		.4byte	0x83
 1818 04a3 00000000 		.4byte	.LFB52
 1819 04a7 1E000000 		.4byte	.LFE52-.LFB52
 1820 04ab 01       		.uleb128 0x1
 1821 04ac 9C       		.byte	0x9c
 1822 04ad E0040000 		.4byte	0x4e0
 1823 04b1 0F       		.uleb128 0xf
 1824 04b2 6900     		.ascii	"i\000"
 1825 04b4 01       		.byte	0x1
 1826 04b5 D104     		.2byte	0x4d1
 1827 04b7 83000000 		.4byte	0x83
 1828 04bb 6D020000 		.4byte	.LLST20
 1829 04bf 10       		.uleb128 0x10
 1830 04c0 2E030000 		.4byte	.LASF42
 1831 04c4 01       		.byte	0x1
 1832 04c5 D204     		.2byte	0x4d2
 1833 04c7 83000000 		.4byte	0x83
 1834 04cb 8C020000 		.4byte	.LLST21
 1835 04cf 0C       		.uleb128 0xc
 1836 04d0 0E000000 		.4byte	.LVL58
 1837 04d4 30040000 		.4byte	0x430
 1838 04d8 0A       		.uleb128 0xa
 1839 04d9 01       		.uleb128 0x1
 1840 04da 50       		.byte	0x50
 1841 04db 02       		.uleb128 0x2
 1842 04dc 74       		.byte	0x74
 1843 04dd 00       		.sleb128 0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 84


 1844 04de 00       		.byte	0
 1845 04df 00       		.byte	0
 1846 04e0 0E       		.uleb128 0xe
 1847 04e1 17060000 		.4byte	.LASF44
 1848 04e5 01       		.byte	0x1
 1849 04e6 FD04     		.2byte	0x4fd
 1850 04e8 00000000 		.4byte	.LFB53
 1851 04ec 14000000 		.4byte	.LFE53-.LFB53
 1852 04f0 01       		.uleb128 0x1
 1853 04f1 9C       		.byte	0x9c
 1854 04f2 38050000 		.4byte	0x538
 1855 04f6 12       		.uleb128 0x12
 1856 04f7 CC000000 		.4byte	.LASF21
 1857 04fb 01       		.byte	0x1
 1858 04fc FD04     		.2byte	0x4fd
 1859 04fe 83000000 		.4byte	0x83
 1860 0502 B6020000 		.4byte	.LLST22
 1861 0506 10       		.uleb128 0x10
 1862 0507 C3000000 		.4byte	.LASF40
 1863 050b 01       		.byte	0x1
 1864 050c 0005     		.2byte	0x500
 1865 050e 6B000000 		.4byte	0x6b
 1866 0512 D7020000 		.4byte	.LLST23
 1867 0516 14       		.uleb128 0x14
 1868 0517 0C010000 		.4byte	.LASF41
 1869 051b 01       		.byte	0x1
 1870 051c 0105     		.2byte	0x501
 1871 051e 6B000000 		.4byte	0x6b
 1872 0522 01       		.byte	0x1
 1873 0523 0C       		.uleb128 0xc
 1874 0524 0C000000 		.4byte	.LVL66
 1875 0528 FC090000 		.4byte	0x9fc
 1876 052c 0A       		.uleb128 0xa
 1877 052d 01       		.uleb128 0x1
 1878 052e 51       		.byte	0x51
 1879 052f 01       		.uleb128 0x1
 1880 0530 30       		.byte	0x30
 1881 0531 0A       		.uleb128 0xa
 1882 0532 01       		.uleb128 0x1
 1883 0533 52       		.byte	0x52
 1884 0534 01       		.uleb128 0x1
 1885 0535 31       		.byte	0x31
 1886 0536 00       		.byte	0
 1887 0537 00       		.byte	0
 1888 0538 0E       		.uleb128 0xe
 1889 0539 72040000 		.4byte	.LASF45
 1890 053d 01       		.byte	0x1
 1891 053e 2805     		.2byte	0x528
 1892 0540 00000000 		.4byte	.LFB54
 1893 0544 14000000 		.4byte	.LFE54-.LFB54
 1894 0548 01       		.uleb128 0x1
 1895 0549 9C       		.byte	0x9c
 1896 054a 90050000 		.4byte	0x590
 1897 054e 12       		.uleb128 0x12
 1898 054f CC000000 		.4byte	.LASF21
 1899 0553 01       		.byte	0x1
 1900 0554 2805     		.2byte	0x528
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 85


 1901 0556 83000000 		.4byte	0x83
 1902 055a F7020000 		.4byte	.LLST24
 1903 055e 10       		.uleb128 0x10
 1904 055f C3000000 		.4byte	.LASF40
 1905 0563 01       		.byte	0x1
 1906 0564 2A05     		.2byte	0x52a
 1907 0566 6B000000 		.4byte	0x6b
 1908 056a 18030000 		.4byte	.LLST25
 1909 056e 14       		.uleb128 0x14
 1910 056f 0C010000 		.4byte	.LASF41
 1911 0573 01       		.byte	0x1
 1912 0574 2B05     		.2byte	0x52b
 1913 0576 6B000000 		.4byte	0x6b
 1914 057a 01       		.byte	0x1
 1915 057b 0C       		.uleb128 0xc
 1916 057c 0C000000 		.4byte	.LVL70
 1917 0580 FC090000 		.4byte	0x9fc
 1918 0584 0A       		.uleb128 0xa
 1919 0585 01       		.uleb128 0x1
 1920 0586 51       		.byte	0x51
 1921 0587 01       		.uleb128 0x1
 1922 0588 30       		.byte	0x30
 1923 0589 0A       		.uleb128 0xa
 1924 058a 01       		.uleb128 0x1
 1925 058b 52       		.byte	0x52
 1926 058c 01       		.uleb128 0x1
 1927 058d 30       		.byte	0x30
 1928 058e 00       		.byte	0
 1929 058f 00       		.byte	0
 1930 0590 11       		.uleb128 0x11
 1931 0591 89040000 		.4byte	.LASF46
 1932 0595 01       		.byte	0x1
 1933 0596 BC09     		.2byte	0x9bc
 1934 0598 77000000 		.4byte	0x77
 1935 059c 00000000 		.4byte	.LFB55
 1936 05a0 0C000000 		.4byte	.LFE55-.LFB55
 1937 05a4 01       		.uleb128 0x1
 1938 05a5 9C       		.byte	0x9c
 1939 05a6 D9050000 		.4byte	0x5d9
 1940 05aa 15       		.uleb128 0x15
 1941 05ab 783100   		.ascii	"x1\000"
 1942 05ae 01       		.byte	0x1
 1943 05af BC09     		.2byte	0x9bc
 1944 05b1 77000000 		.4byte	0x77
 1945 05b5 38030000 		.4byte	.LLST26
 1946 05b9 15       		.uleb128 0x15
 1947 05ba 783200   		.ascii	"x2\000"
 1948 05bd 01       		.byte	0x1
 1949 05be BC09     		.2byte	0x9bc
 1950 05c0 77000000 		.4byte	0x77
 1951 05c4 59030000 		.4byte	.LLST27
 1952 05c8 0F       		.uleb128 0xf
 1953 05c9 746D7000 		.ascii	"tmp\000"
 1954 05cd 01       		.byte	0x1
 1955 05ce BE09     		.2byte	0x9be
 1956 05d0 83000000 		.4byte	0x83
 1957 05d4 7A030000 		.4byte	.LLST28
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 86


 1958 05d8 00       		.byte	0
 1959 05d9 0E       		.uleb128 0xe
 1960 05da 8A050000 		.4byte	.LASF47
 1961 05de 01       		.byte	0x1
 1962 05df 5F01     		.2byte	0x15f
 1963 05e1 00000000 		.4byte	.LFB38
 1964 05e5 D4000000 		.4byte	.LFE38-.LFB38
 1965 05e9 01       		.uleb128 0x1
 1966 05ea 9C       		.byte	0x9c
 1967 05eb 72060000 		.4byte	0x672
 1968 05ef 12       		.uleb128 0x12
 1969 05f0 FB010000 		.4byte	.LASF19
 1970 05f4 01       		.byte	0x1
 1971 05f5 5F01     		.2byte	0x15f
 1972 05f7 83000000 		.4byte	0x83
 1973 05fb 8D030000 		.4byte	.LLST29
 1974 05ff 10       		.uleb128 0x10
 1975 0600 76020000 		.4byte	.LASF48
 1976 0604 01       		.byte	0x1
 1977 0605 6101     		.2byte	0x161
 1978 0607 83000000 		.4byte	0x83
 1979 060b D2030000 		.4byte	.LLST30
 1980 060f 10       		.uleb128 0x10
 1981 0610 C6050000 		.4byte	.LASF49
 1982 0614 01       		.byte	0x1
 1983 0615 6201     		.2byte	0x162
 1984 0617 83000000 		.4byte	0x83
 1985 061b 06040000 		.4byte	.LLST31
 1986 061f 10       		.uleb128 0x10
 1987 0620 9B020000 		.4byte	.LASF50
 1988 0624 01       		.byte	0x1
 1989 0625 6301     		.2byte	0x163
 1990 0627 77000000 		.4byte	0x77
 1991 062b 31040000 		.4byte	.LLST32
 1992 062f 10       		.uleb128 0x10
 1993 0630 8D000000 		.4byte	.LASF51
 1994 0634 01       		.byte	0x1
 1995 0635 6401     		.2byte	0x164
 1996 0637 77000000 		.4byte	0x77
 1997 063b 4F040000 		.4byte	.LLST33
 1998 063f 16       		.uleb128 0x16
 1999 0640 CC000000 		.4byte	.LASF21
 2000 0644 01       		.byte	0x1
 2001 0645 6501     		.2byte	0x165
 2002 0647 6B000000 		.4byte	0x6b
 2003 064b 14       		.uleb128 0x14
 2004 064c D2020000 		.4byte	.LASF52
 2005 0650 01       		.byte	0x1
 2006 0651 6601     		.2byte	0x166
 2007 0653 77000000 		.4byte	0x77
 2008 0657 03       		.byte	0x3
 2009 0658 0B       		.uleb128 0xb
 2010 0659 20000000 		.4byte	.LVL80
 2011 065d 90050000 		.4byte	0x590
 2012 0661 0C       		.uleb128 0xc
 2013 0662 5C000000 		.4byte	.LVL86
 2014 0666 B7000000 		.4byte	0xb7
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 87


 2015 066a 0A       		.uleb128 0xa
 2016 066b 01       		.uleb128 0x1
 2017 066c 50       		.byte	0x50
 2018 066d 02       		.uleb128 0x2
 2019 066e 74       		.byte	0x74
 2020 066f 00       		.sleb128 0
 2021 0670 00       		.byte	0
 2022 0671 00       		.byte	0
 2023 0672 0E       		.uleb128 0xe
 2024 0673 DD010000 		.4byte	.LASF53
 2025 0677 01       		.byte	0x1
 2026 0678 1F02     		.2byte	0x21f
 2027 067a 00000000 		.4byte	.LFB39
 2028 067e 08000000 		.4byte	.LFE39-.LFB39
 2029 0682 01       		.uleb128 0x1
 2030 0683 9C       		.byte	0x9c
 2031 0684 AA060000 		.4byte	0x6aa
 2032 0688 12       		.uleb128 0x12
 2033 0689 FB010000 		.4byte	.LASF19
 2034 068d 01       		.byte	0x1
 2035 068e 1F02     		.2byte	0x21f
 2036 0690 83000000 		.4byte	0x83
 2037 0694 78040000 		.4byte	.LLST34
 2038 0698 0C       		.uleb128 0xc
 2039 0699 06000000 		.4byte	.LVL100
 2040 069d D9050000 		.4byte	0x5d9
 2041 06a1 0A       		.uleb128 0xa
 2042 06a2 01       		.uleb128 0x1
 2043 06a3 50       		.byte	0x50
 2044 06a4 03       		.uleb128 0x3
 2045 06a5 F3       		.byte	0xf3
 2046 06a6 01       		.uleb128 0x1
 2047 06a7 50       		.byte	0x50
 2048 06a8 00       		.byte	0
 2049 06a9 00       		.byte	0
 2050 06aa 0E       		.uleb128 0xe
 2051 06ab EC000000 		.4byte	.LASF54
 2052 06af 01       		.byte	0x1
 2053 06b0 5502     		.2byte	0x255
 2054 06b2 00000000 		.4byte	.LFB40
 2055 06b6 24000000 		.4byte	.LFE40-.LFB40
 2056 06ba 01       		.uleb128 0x1
 2057 06bb 9C       		.byte	0x9c
 2058 06bc 03070000 		.4byte	0x703
 2059 06c0 0F       		.uleb128 0xf
 2060 06c1 6900     		.ascii	"i\000"
 2061 06c3 01       		.byte	0x1
 2062 06c4 5702     		.2byte	0x257
 2063 06c6 83000000 		.4byte	0x83
 2064 06ca 99040000 		.4byte	.LLST35
 2065 06ce 10       		.uleb128 0x10
 2066 06cf 9D040000 		.4byte	.LASF23
 2067 06d3 01       		.byte	0x1
 2068 06d4 5802     		.2byte	0x258
 2069 06d6 83000000 		.4byte	0x83
 2070 06da B8040000 		.4byte	.LLST36
 2071 06de 09       		.uleb128 0x9
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 88


 2072 06df 0E000000 		.4byte	.LVL103
 2073 06e3 F1090000 		.4byte	0x9f1
 2074 06e7 F2060000 		.4byte	0x6f2
 2075 06eb 0A       		.uleb128 0xa
 2076 06ec 01       		.uleb128 0x1
 2077 06ed 51       		.byte	0x51
 2078 06ee 02       		.uleb128 0x2
 2079 06ef 74       		.byte	0x74
 2080 06f0 00       		.sleb128 0
 2081 06f1 00       		.byte	0
 2082 06f2 0C       		.uleb128 0xc
 2083 06f3 18000000 		.4byte	.LVL105
 2084 06f7 72060000 		.4byte	0x672
 2085 06fb 0A       		.uleb128 0xa
 2086 06fc 01       		.uleb128 0x1
 2087 06fd 50       		.byte	0x50
 2088 06fe 02       		.uleb128 0x2
 2089 06ff 74       		.byte	0x74
 2090 0700 00       		.sleb128 0
 2091 0701 00       		.byte	0
 2092 0702 00       		.byte	0
 2093 0703 0E       		.uleb128 0xe
 2094 0704 65000000 		.4byte	.LASF55
 2095 0708 01       		.byte	0x1
 2096 0709 8202     		.2byte	0x282
 2097 070b 00000000 		.4byte	.LFB41
 2098 070f 24000000 		.4byte	.LFE41-.LFB41
 2099 0713 01       		.uleb128 0x1
 2100 0714 9C       		.byte	0x9c
 2101 0715 93070000 		.4byte	0x793
 2102 0719 12       		.uleb128 0x12
 2103 071a CC000000 		.4byte	.LASF21
 2104 071e 01       		.byte	0x1
 2105 071f 8202     		.2byte	0x282
 2106 0721 83000000 		.4byte	0x83
 2107 0725 CB040000 		.4byte	.LLST37
 2108 0729 14       		.uleb128 0x14
 2109 072a 11070000 		.4byte	.LASF56
 2110 072e 01       		.byte	0x1
 2111 072f 8402     		.2byte	0x284
 2112 0731 83000000 		.4byte	0x83
 2113 0735 01       		.byte	0x1
 2114 0736 14       		.uleb128 0x14
 2115 0737 BB040000 		.4byte	.LASF57
 2116 073b 01       		.byte	0x1
 2117 073c 8502     		.2byte	0x285
 2118 073e 83000000 		.4byte	0x83
 2119 0742 00       		.byte	0
 2120 0743 14       		.uleb128 0x14
 2121 0744 03050000 		.4byte	.LASF58
 2122 0748 01       		.byte	0x1
 2123 0749 8602     		.2byte	0x286
 2124 074b 83000000 		.4byte	0x83
 2125 074f 01       		.byte	0x1
 2126 0750 0F       		.uleb128 0xf
 2127 0751 6900     		.ascii	"i\000"
 2128 0753 01       		.byte	0x1
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 89


 2129 0754 8702     		.2byte	0x287
 2130 0756 83000000 		.4byte	0x83
 2131 075a EC040000 		.4byte	.LLST38
 2132 075e 10       		.uleb128 0x10
 2133 075f 9D040000 		.4byte	.LASF23
 2134 0763 01       		.byte	0x1
 2135 0764 8802     		.2byte	0x288
 2136 0766 83000000 		.4byte	0x83
 2137 076a 0B050000 		.4byte	.LLST39
 2138 076e 09       		.uleb128 0x9
 2139 076f 0E000000 		.4byte	.LVL111
 2140 0773 F1090000 		.4byte	0x9f1
 2141 0777 82070000 		.4byte	0x782
 2142 077b 0A       		.uleb128 0xa
 2143 077c 01       		.uleb128 0x1
 2144 077d 51       		.byte	0x51
 2145 077e 02       		.uleb128 0x2
 2146 077f 74       		.byte	0x74
 2147 0780 00       		.sleb128 0
 2148 0781 00       		.byte	0
 2149 0782 0C       		.uleb128 0xc
 2150 0783 18000000 		.4byte	.LVL113
 2151 0787 72060000 		.4byte	0x672
 2152 078b 0A       		.uleb128 0xa
 2153 078c 01       		.uleb128 0x1
 2154 078d 50       		.byte	0x50
 2155 078e 02       		.uleb128 0x2
 2156 078f 74       		.byte	0x74
 2157 0790 00       		.sleb128 0
 2158 0791 00       		.byte	0
 2159 0792 00       		.byte	0
 2160 0793 11       		.uleb128 0x11
 2161 0794 D2060000 		.4byte	.LASF59
 2162 0798 01       		.byte	0x1
 2163 0799 A50A     		.2byte	0xaa5
 2164 079b 83000000 		.4byte	0x83
 2165 079f 00000000 		.4byte	.LFB56
 2166 07a3 0C000000 		.4byte	.LFE56-.LFB56
 2167 07a7 01       		.uleb128 0x1
 2168 07a8 9C       		.byte	0x9c
 2169 07a9 BE070000 		.4byte	0x7be
 2170 07ad 12       		.uleb128 0x12
 2171 07ae FB010000 		.4byte	.LASF19
 2172 07b2 01       		.byte	0x1
 2173 07b3 A50A     		.2byte	0xaa5
 2174 07b5 83000000 		.4byte	0x83
 2175 07b9 1E050000 		.4byte	.LLST40
 2176 07bd 00       		.byte	0
 2177 07be 11       		.uleb128 0x11
 2178 07bf CB050000 		.4byte	.LASF60
 2179 07c3 01       		.byte	0x1
 2180 07c4 BF0A     		.2byte	0xabf
 2181 07c6 6B000000 		.4byte	0x6b
 2182 07ca 00000000 		.4byte	.LFB57
 2183 07ce 0C000000 		.4byte	.LFE57-.LFB57
 2184 07d2 01       		.uleb128 0x1
 2185 07d3 9C       		.byte	0x9c
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 90


 2186 07d4 E9070000 		.4byte	0x7e9
 2187 07d8 12       		.uleb128 0x12
 2188 07d9 FB010000 		.4byte	.LASF19
 2189 07dd 01       		.byte	0x1
 2190 07de BF0A     		.2byte	0xabf
 2191 07e0 83000000 		.4byte	0x83
 2192 07e4 3F050000 		.4byte	.LLST41
 2193 07e8 00       		.byte	0
 2194 07e9 11       		.uleb128 0x11
 2195 07ea 50000000 		.4byte	.LASF61
 2196 07ee 01       		.byte	0x1
 2197 07ef D90A     		.2byte	0xad9
 2198 07f1 6B000000 		.4byte	0x6b
 2199 07f5 00000000 		.4byte	.LFB58
 2200 07f9 04000000 		.4byte	.LFE58-.LFB58
 2201 07fd 01       		.uleb128 0x1
 2202 07fe 9C       		.byte	0x9c
 2203 07ff 14080000 		.4byte	0x814
 2204 0803 12       		.uleb128 0x12
 2205 0804 CC000000 		.4byte	.LASF21
 2206 0808 01       		.byte	0x1
 2207 0809 D90A     		.2byte	0xad9
 2208 080b 83000000 		.4byte	0x83
 2209 080f 60050000 		.4byte	.LLST42
 2210 0813 00       		.byte	0
 2211 0814 17       		.uleb128 0x17
 2212 0815 2B010000 		.4byte	.LASF62
 2213 0819 01       		.byte	0x1
 2214 081a F30A     		.2byte	0xaf3
 2215 081c 00000000 		.4byte	.LFB59
 2216 0820 0C000000 		.4byte	.LFE59-.LFB59
 2217 0824 01       		.uleb128 0x1
 2218 0825 9C       		.byte	0x9c
 2219 0826 17       		.uleb128 0x17
 2220 0827 F2060000 		.4byte	.LASF63
 2221 082b 01       		.byte	0x1
 2222 082c 0C0B     		.2byte	0xb0c
 2223 082e 00000000 		.4byte	.LFB60
 2224 0832 0C000000 		.4byte	.LFE60-.LFB60
 2225 0836 01       		.uleb128 0x1
 2226 0837 9C       		.byte	0x9c
 2227 0838 18       		.uleb128 0x18
 2228 0839 6B000000 		.4byte	0x6b
 2229 083d 48080000 		.4byte	0x848
 2230 0841 19       		.uleb128 0x19
 2231 0842 A4000000 		.4byte	0xa4
 2232 0846 01       		.byte	0x1
 2233 0847 00       		.byte	0
 2234 0848 1A       		.uleb128 0x1a
 2235 0849 96060000 		.4byte	.LASF64
 2236 084d 01       		.byte	0x1
 2237 084e 59       		.byte	0x59
 2238 084f 38080000 		.4byte	0x838
 2239 0853 05       		.uleb128 0x5
 2240 0854 03       		.byte	0x3
 2241 0855 0C000000 		.4byte	CapSense_debounceCounter
 2242 0859 18       		.uleb128 0x18
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 91


 2243 085a 77000000 		.4byte	0x77
 2244 085e 69080000 		.4byte	0x869
 2245 0862 19       		.uleb128 0x19
 2246 0863 A4000000 		.4byte	0xa4
 2247 0867 00       		.byte	0
 2248 0868 00       		.byte	0
 2249 0869 1B       		.uleb128 0x1b
 2250 086a 1D000000 		.4byte	.LASF65
 2251 086e 01       		.byte	0x1
 2252 086f 2C       		.byte	0x2c
 2253 0870 59080000 		.4byte	0x859
 2254 0874 18       		.uleb128 0x18
 2255 0875 6B000000 		.4byte	0x6b
 2256 0879 84080000 		.4byte	0x884
 2257 087d 19       		.uleb128 0x19
 2258 087e A4000000 		.4byte	0xa4
 2259 0882 00       		.byte	0
 2260 0883 00       		.byte	0
 2261 0884 1B       		.uleb128 0x1b
 2262 0885 56020000 		.4byte	.LASF66
 2263 0889 01       		.byte	0x1
 2264 088a 2D       		.byte	0x2d
 2265 088b 74080000 		.4byte	0x874
 2266 088f 18       		.uleb128 0x18
 2267 0890 B2000000 		.4byte	0xb2
 2268 0894 9F080000 		.4byte	0x89f
 2269 0898 19       		.uleb128 0x19
 2270 0899 A4000000 		.4byte	0xa4
 2271 089d 00       		.byte	0
 2272 089e 00       		.byte	0
 2273 089f 1B       		.uleb128 0x1b
 2274 08a0 01060000 		.4byte	.LASF67
 2275 08a4 01       		.byte	0x1
 2276 08a5 2E       		.byte	0x2e
 2277 08a6 AA080000 		.4byte	0x8aa
 2278 08aa 05       		.uleb128 0x5
 2279 08ab 8F080000 		.4byte	0x88f
 2280 08af 1C       		.uleb128 0x1c
 2281 08b0 57060000 		.4byte	.LASF68
 2282 08b4 01       		.byte	0x1
 2283 08b5 34       		.byte	0x34
 2284 08b6 59080000 		.4byte	0x859
 2285 08ba 05       		.uleb128 0x5
 2286 08bb 03       		.byte	0x3
 2287 08bc 00000000 		.4byte	CapSense_sensorBaseline
 2288 08c0 1C       		.uleb128 0x1c
 2289 08c1 3D050000 		.4byte	.LASF69
 2290 08c5 01       		.byte	0x1
 2291 08c6 35       		.byte	0x35
 2292 08c7 74080000 		.4byte	0x874
 2293 08cb 05       		.uleb128 0x5
 2294 08cc 03       		.byte	0x3
 2295 08cd 00000000 		.4byte	CapSense_sensorBaselineLow
 2296 08d1 1C       		.uleb128 0x1c
 2297 08d2 41040000 		.4byte	.LASF70
 2298 08d6 01       		.byte	0x1
 2299 08d7 36       		.byte	0x36
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 92


 2300 08d8 59080000 		.4byte	0x859
 2301 08dc 05       		.uleb128 0x5
 2302 08dd 03       		.byte	0x3
 2303 08de 00000000 		.4byte	CapSense_sensorSignal
 2304 08e2 1C       		.uleb128 0x1c
 2305 08e3 FE020000 		.4byte	.LASF71
 2306 08e7 01       		.byte	0x1
 2307 08e8 37       		.byte	0x37
 2308 08e9 74080000 		.4byte	0x874
 2309 08ed 05       		.uleb128 0x5
 2310 08ee 03       		.byte	0x3
 2311 08ef 00000000 		.4byte	CapSense_sensorOnMask
 2312 08f3 1C       		.uleb128 0x1c
 2313 08f4 02020000 		.4byte	.LASF72
 2314 08f8 01       		.byte	0x1
 2315 08f9 39       		.byte	0x39
 2316 08fa 74080000 		.4byte	0x874
 2317 08fe 05       		.uleb128 0x5
 2318 08ff 03       		.byte	0x3
 2319 0900 00000000 		.4byte	CapSense_lowBaselineResetCnt
 2320 0904 1C       		.uleb128 0x1c
 2321 0905 14030000 		.4byte	.LASF73
 2322 0909 01       		.byte	0x1
 2323 090a 3A       		.byte	0x3a
 2324 090b 74080000 		.4byte	0x874
 2325 090f 05       		.uleb128 0x5
 2326 0910 03       		.byte	0x3
 2327 0911 00000000 		.4byte	CapSense_lowBaselineReset
 2328 0915 18       		.uleb128 0x18
 2329 0916 25090000 		.4byte	0x925
 2330 091a 25090000 		.4byte	0x925
 2331 091e 19       		.uleb128 0x19
 2332 091f A4000000 		.4byte	0xa4
 2333 0923 00       		.byte	0
 2334 0924 00       		.byte	0
 2335 0925 05       		.uleb128 0x5
 2336 0926 77000000 		.4byte	0x77
 2337 092a 1C       		.uleb128 0x1c
 2338 092b E8050000 		.4byte	.LASF74
 2339 092f 01       		.byte	0x1
 2340 0930 49       		.byte	0x49
 2341 0931 3B090000 		.4byte	0x93b
 2342 0935 05       		.uleb128 0x5
 2343 0936 03       		.byte	0x3
 2344 0937 00000000 		.4byte	CapSense_fingerThreshold
 2345 093b 05       		.uleb128 0x5
 2346 093c 15090000 		.4byte	0x915
 2347 0940 1C       		.uleb128 0x1c
 2348 0941 5F050000 		.4byte	.LASF75
 2349 0945 01       		.byte	0x1
 2350 0946 4D       		.byte	0x4d
 2351 0947 51090000 		.4byte	0x951
 2352 094b 05       		.uleb128 0x5
 2353 094c 03       		.byte	0x3
 2354 094d 00000000 		.4byte	CapSense_noiseThreshold
 2355 0951 05       		.uleb128 0x5
 2356 0952 15090000 		.4byte	0x915
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 93


 2357 0956 1C       		.uleb128 0x1c
 2358 0957 D3000000 		.4byte	.LASF76
 2359 095b 01       		.byte	0x1
 2360 095c 51       		.byte	0x51
 2361 095d 67090000 		.4byte	0x967
 2362 0961 05       		.uleb128 0x5
 2363 0962 03       		.byte	0x3
 2364 0963 00000000 		.4byte	CapSense_hysteresis
 2365 0967 05       		.uleb128 0x5
 2366 0968 15090000 		.4byte	0x915
 2367 096c 1C       		.uleb128 0x1c
 2368 096d 19010000 		.4byte	.LASF77
 2369 0971 01       		.byte	0x1
 2370 0972 55       		.byte	0x55
 2371 0973 7D090000 		.4byte	0x97d
 2372 0977 05       		.uleb128 0x5
 2373 0978 03       		.byte	0x3
 2374 0979 00000000 		.4byte	CapSense_debounce
 2375 097d 05       		.uleb128 0x5
 2376 097e 8F080000 		.4byte	0x88f
 2377 0982 1C       		.uleb128 0x1c
 2378 0983 BC020000 		.4byte	.LASF78
 2379 0987 01       		.byte	0x1
 2380 0988 5D       		.byte	0x5d
 2381 0989 93090000 		.4byte	0x993
 2382 098d 05       		.uleb128 0x5
 2383 098e 03       		.byte	0x3
 2384 098f 00000000 		.4byte	CapSense_rawDataIndex
 2385 0993 05       		.uleb128 0x5
 2386 0994 8F080000 		.4byte	0x88f
 2387 0998 1C       		.uleb128 0x1c
 2388 0999 A3020000 		.4byte	.LASF79
 2389 099d 01       		.byte	0x1
 2390 099e 61       		.byte	0x61
 2391 099f A9090000 		.4byte	0x9a9
 2392 09a3 05       		.uleb128 0x5
 2393 09a4 03       		.byte	0x3
 2394 09a5 00000000 		.4byte	CapSense_numberOfSensors
 2395 09a9 05       		.uleb128 0x5
 2396 09aa 8F080000 		.4byte	0x88f
 2397 09ae 1C       		.uleb128 0x1c
 2398 09af 9D000000 		.4byte	.LASF80
 2399 09b3 01       		.byte	0x1
 2400 09b4 27       		.byte	0x27
 2401 09b5 59080000 		.4byte	0x859
 2402 09b9 05       		.uleb128 0x5
 2403 09ba 03       		.byte	0x3
 2404 09bb 00000000 		.4byte	CapSense_rawFilterData1
 2405 09bf 1C       		.uleb128 0x1c
 2406 09c0 2D060000 		.4byte	.LASF81
 2407 09c4 01       		.byte	0x1
 2408 09c5 45       		.byte	0x45
 2409 09c6 6B000000 		.4byte	0x6b
 2410 09ca 05       		.uleb128 0x5
 2411 09cb 03       		.byte	0x3
 2412 09cc 00000000 		.4byte	CapSense_enableRawFilters
 2413 09d0 1D       		.uleb128 0x1d
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 94


 2414 09d1 4B030000 		.4byte	.LASF82
 2415 09d5 4B030000 		.4byte	.LASF82
 2416 09d9 03       		.byte	0x3
 2417 09da 9C       		.byte	0x9c
 2418 09db 1D       		.uleb128 0x1d
 2419 09dc 47060000 		.4byte	.LASF83
 2420 09e0 47060000 		.4byte	.LASF83
 2421 09e4 03       		.byte	0x3
 2422 09e5 9B       		.byte	0x9b
 2423 09e6 1D       		.uleb128 0x1d
 2424 09e7 25020000 		.4byte	.LASF84
 2425 09eb 25020000 		.4byte	.LASF84
 2426 09ef 03       		.byte	0x3
 2427 09f0 9E       		.byte	0x9e
 2428 09f1 1D       		.uleb128 0x1d
 2429 09f2 41020000 		.4byte	.LASF85
 2430 09f6 41020000 		.4byte	.LASF85
 2431 09fa 04       		.byte	0x4
 2432 09fb 6A       		.byte	0x6a
 2433 09fc 1D       		.uleb128 0x1d
 2434 09fd 0E050000 		.4byte	.LASF86
 2435 0a01 0E050000 		.4byte	.LASF86
 2436 0a05 04       		.byte	0x4
 2437 0a06 6B       		.byte	0x6b
 2438 0a07 00       		.byte	0
 2439              		.section	.debug_abbrev,"",%progbits
 2440              	.Ldebug_abbrev0:
 2441 0000 01       		.uleb128 0x1
 2442 0001 11       		.uleb128 0x11
 2443 0002 01       		.byte	0x1
 2444 0003 25       		.uleb128 0x25
 2445 0004 0E       		.uleb128 0xe
 2446 0005 13       		.uleb128 0x13
 2447 0006 0B       		.uleb128 0xb
 2448 0007 03       		.uleb128 0x3
 2449 0008 0E       		.uleb128 0xe
 2450 0009 1B       		.uleb128 0x1b
 2451 000a 0E       		.uleb128 0xe
 2452 000b 55       		.uleb128 0x55
 2453 000c 17       		.uleb128 0x17
 2454 000d 11       		.uleb128 0x11
 2455 000e 01       		.uleb128 0x1
 2456 000f 10       		.uleb128 0x10
 2457 0010 17       		.uleb128 0x17
 2458 0011 00       		.byte	0
 2459 0012 00       		.byte	0
 2460 0013 02       		.uleb128 0x2
 2461 0014 24       		.uleb128 0x24
 2462 0015 00       		.byte	0
 2463 0016 0B       		.uleb128 0xb
 2464 0017 0B       		.uleb128 0xb
 2465 0018 3E       		.uleb128 0x3e
 2466 0019 0B       		.uleb128 0xb
 2467 001a 03       		.uleb128 0x3
 2468 001b 0E       		.uleb128 0xe
 2469 001c 00       		.byte	0
 2470 001d 00       		.byte	0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 95


 2471 001e 03       		.uleb128 0x3
 2472 001f 24       		.uleb128 0x24
 2473 0020 00       		.byte	0
 2474 0021 0B       		.uleb128 0xb
 2475 0022 0B       		.uleb128 0xb
 2476 0023 3E       		.uleb128 0x3e
 2477 0024 0B       		.uleb128 0xb
 2478 0025 03       		.uleb128 0x3
 2479 0026 08       		.uleb128 0x8
 2480 0027 00       		.byte	0
 2481 0028 00       		.byte	0
 2482 0029 04       		.uleb128 0x4
 2483 002a 16       		.uleb128 0x16
 2484 002b 00       		.byte	0
 2485 002c 03       		.uleb128 0x3
 2486 002d 0E       		.uleb128 0xe
 2487 002e 3A       		.uleb128 0x3a
 2488 002f 0B       		.uleb128 0xb
 2489 0030 3B       		.uleb128 0x3b
 2490 0031 05       		.uleb128 0x5
 2491 0032 49       		.uleb128 0x49
 2492 0033 13       		.uleb128 0x13
 2493 0034 00       		.byte	0
 2494 0035 00       		.byte	0
 2495 0036 05       		.uleb128 0x5
 2496 0037 26       		.uleb128 0x26
 2497 0038 00       		.byte	0
 2498 0039 49       		.uleb128 0x49
 2499 003a 13       		.uleb128 0x13
 2500 003b 00       		.byte	0
 2501 003c 00       		.byte	0
 2502 003d 06       		.uleb128 0x6
 2503 003e 2E       		.uleb128 0x2e
 2504 003f 01       		.byte	0x1
 2505 0040 3F       		.uleb128 0x3f
 2506 0041 19       		.uleb128 0x19
 2507 0042 03       		.uleb128 0x3
 2508 0043 0E       		.uleb128 0xe
 2509 0044 3A       		.uleb128 0x3a
 2510 0045 0B       		.uleb128 0xb
 2511 0046 3B       		.uleb128 0x3b
 2512 0047 0B       		.uleb128 0xb
 2513 0048 27       		.uleb128 0x27
 2514 0049 19       		.uleb128 0x19
 2515 004a 11       		.uleb128 0x11
 2516 004b 01       		.uleb128 0x1
 2517 004c 12       		.uleb128 0x12
 2518 004d 06       		.uleb128 0x6
 2519 004e 40       		.uleb128 0x40
 2520 004f 18       		.uleb128 0x18
 2521 0050 9742     		.uleb128 0x2117
 2522 0052 19       		.uleb128 0x19
 2523 0053 01       		.uleb128 0x1
 2524 0054 13       		.uleb128 0x13
 2525 0055 00       		.byte	0
 2526 0056 00       		.byte	0
 2527 0057 07       		.uleb128 0x7
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 96


 2528 0058 05       		.uleb128 0x5
 2529 0059 00       		.byte	0
 2530 005a 03       		.uleb128 0x3
 2531 005b 0E       		.uleb128 0xe
 2532 005c 3A       		.uleb128 0x3a
 2533 005d 0B       		.uleb128 0xb
 2534 005e 3B       		.uleb128 0x3b
 2535 005f 0B       		.uleb128 0xb
 2536 0060 49       		.uleb128 0x49
 2537 0061 13       		.uleb128 0x13
 2538 0062 02       		.uleb128 0x2
 2539 0063 17       		.uleb128 0x17
 2540 0064 00       		.byte	0
 2541 0065 00       		.byte	0
 2542 0066 08       		.uleb128 0x8
 2543 0067 34       		.uleb128 0x34
 2544 0068 00       		.byte	0
 2545 0069 03       		.uleb128 0x3
 2546 006a 0E       		.uleb128 0xe
 2547 006b 3A       		.uleb128 0x3a
 2548 006c 0B       		.uleb128 0xb
 2549 006d 3B       		.uleb128 0x3b
 2550 006e 0B       		.uleb128 0xb
 2551 006f 49       		.uleb128 0x49
 2552 0070 13       		.uleb128 0x13
 2553 0071 02       		.uleb128 0x2
 2554 0072 17       		.uleb128 0x17
 2555 0073 00       		.byte	0
 2556 0074 00       		.byte	0
 2557 0075 09       		.uleb128 0x9
 2558 0076 898201   		.uleb128 0x4109
 2559 0079 01       		.byte	0x1
 2560 007a 11       		.uleb128 0x11
 2561 007b 01       		.uleb128 0x1
 2562 007c 31       		.uleb128 0x31
 2563 007d 13       		.uleb128 0x13
 2564 007e 01       		.uleb128 0x1
 2565 007f 13       		.uleb128 0x13
 2566 0080 00       		.byte	0
 2567 0081 00       		.byte	0
 2568 0082 0A       		.uleb128 0xa
 2569 0083 8A8201   		.uleb128 0x410a
 2570 0086 00       		.byte	0
 2571 0087 02       		.uleb128 0x2
 2572 0088 18       		.uleb128 0x18
 2573 0089 9142     		.uleb128 0x2111
 2574 008b 18       		.uleb128 0x18
 2575 008c 00       		.byte	0
 2576 008d 00       		.byte	0
 2577 008e 0B       		.uleb128 0xb
 2578 008f 898201   		.uleb128 0x4109
 2579 0092 00       		.byte	0
 2580 0093 11       		.uleb128 0x11
 2581 0094 01       		.uleb128 0x1
 2582 0095 31       		.uleb128 0x31
 2583 0096 13       		.uleb128 0x13
 2584 0097 00       		.byte	0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 97


 2585 0098 00       		.byte	0
 2586 0099 0C       		.uleb128 0xc
 2587 009a 898201   		.uleb128 0x4109
 2588 009d 01       		.byte	0x1
 2589 009e 11       		.uleb128 0x11
 2590 009f 01       		.uleb128 0x1
 2591 00a0 31       		.uleb128 0x31
 2592 00a1 13       		.uleb128 0x13
 2593 00a2 00       		.byte	0
 2594 00a3 00       		.byte	0
 2595 00a4 0D       		.uleb128 0xd
 2596 00a5 34       		.uleb128 0x34
 2597 00a6 00       		.byte	0
 2598 00a7 03       		.uleb128 0x3
 2599 00a8 08       		.uleb128 0x8
 2600 00a9 3A       		.uleb128 0x3a
 2601 00aa 0B       		.uleb128 0xb
 2602 00ab 3B       		.uleb128 0x3b
 2603 00ac 0B       		.uleb128 0xb
 2604 00ad 49       		.uleb128 0x49
 2605 00ae 13       		.uleb128 0x13
 2606 00af 02       		.uleb128 0x2
 2607 00b0 17       		.uleb128 0x17
 2608 00b1 00       		.byte	0
 2609 00b2 00       		.byte	0
 2610 00b3 0E       		.uleb128 0xe
 2611 00b4 2E       		.uleb128 0x2e
 2612 00b5 01       		.byte	0x1
 2613 00b6 3F       		.uleb128 0x3f
 2614 00b7 19       		.uleb128 0x19
 2615 00b8 03       		.uleb128 0x3
 2616 00b9 0E       		.uleb128 0xe
 2617 00ba 3A       		.uleb128 0x3a
 2618 00bb 0B       		.uleb128 0xb
 2619 00bc 3B       		.uleb128 0x3b
 2620 00bd 05       		.uleb128 0x5
 2621 00be 27       		.uleb128 0x27
 2622 00bf 19       		.uleb128 0x19
 2623 00c0 11       		.uleb128 0x11
 2624 00c1 01       		.uleb128 0x1
 2625 00c2 12       		.uleb128 0x12
 2626 00c3 06       		.uleb128 0x6
 2627 00c4 40       		.uleb128 0x40
 2628 00c5 18       		.uleb128 0x18
 2629 00c6 9742     		.uleb128 0x2117
 2630 00c8 19       		.uleb128 0x19
 2631 00c9 01       		.uleb128 0x1
 2632 00ca 13       		.uleb128 0x13
 2633 00cb 00       		.byte	0
 2634 00cc 00       		.byte	0
 2635 00cd 0F       		.uleb128 0xf
 2636 00ce 34       		.uleb128 0x34
 2637 00cf 00       		.byte	0
 2638 00d0 03       		.uleb128 0x3
 2639 00d1 08       		.uleb128 0x8
 2640 00d2 3A       		.uleb128 0x3a
 2641 00d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 98


 2642 00d4 3B       		.uleb128 0x3b
 2643 00d5 05       		.uleb128 0x5
 2644 00d6 49       		.uleb128 0x49
 2645 00d7 13       		.uleb128 0x13
 2646 00d8 02       		.uleb128 0x2
 2647 00d9 17       		.uleb128 0x17
 2648 00da 00       		.byte	0
 2649 00db 00       		.byte	0
 2650 00dc 10       		.uleb128 0x10
 2651 00dd 34       		.uleb128 0x34
 2652 00de 00       		.byte	0
 2653 00df 03       		.uleb128 0x3
 2654 00e0 0E       		.uleb128 0xe
 2655 00e1 3A       		.uleb128 0x3a
 2656 00e2 0B       		.uleb128 0xb
 2657 00e3 3B       		.uleb128 0x3b
 2658 00e4 05       		.uleb128 0x5
 2659 00e5 49       		.uleb128 0x49
 2660 00e6 13       		.uleb128 0x13
 2661 00e7 02       		.uleb128 0x2
 2662 00e8 17       		.uleb128 0x17
 2663 00e9 00       		.byte	0
 2664 00ea 00       		.byte	0
 2665 00eb 11       		.uleb128 0x11
 2666 00ec 2E       		.uleb128 0x2e
 2667 00ed 01       		.byte	0x1
 2668 00ee 3F       		.uleb128 0x3f
 2669 00ef 19       		.uleb128 0x19
 2670 00f0 03       		.uleb128 0x3
 2671 00f1 0E       		.uleb128 0xe
 2672 00f2 3A       		.uleb128 0x3a
 2673 00f3 0B       		.uleb128 0xb
 2674 00f4 3B       		.uleb128 0x3b
 2675 00f5 05       		.uleb128 0x5
 2676 00f6 27       		.uleb128 0x27
 2677 00f7 19       		.uleb128 0x19
 2678 00f8 49       		.uleb128 0x49
 2679 00f9 13       		.uleb128 0x13
 2680 00fa 11       		.uleb128 0x11
 2681 00fb 01       		.uleb128 0x1
 2682 00fc 12       		.uleb128 0x12
 2683 00fd 06       		.uleb128 0x6
 2684 00fe 40       		.uleb128 0x40
 2685 00ff 18       		.uleb128 0x18
 2686 0100 9742     		.uleb128 0x2117
 2687 0102 19       		.uleb128 0x19
 2688 0103 01       		.uleb128 0x1
 2689 0104 13       		.uleb128 0x13
 2690 0105 00       		.byte	0
 2691 0106 00       		.byte	0
 2692 0107 12       		.uleb128 0x12
 2693 0108 05       		.uleb128 0x5
 2694 0109 00       		.byte	0
 2695 010a 03       		.uleb128 0x3
 2696 010b 0E       		.uleb128 0xe
 2697 010c 3A       		.uleb128 0x3a
 2698 010d 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 99


 2699 010e 3B       		.uleb128 0x3b
 2700 010f 05       		.uleb128 0x5
 2701 0110 49       		.uleb128 0x49
 2702 0111 13       		.uleb128 0x13
 2703 0112 02       		.uleb128 0x2
 2704 0113 17       		.uleb128 0x17
 2705 0114 00       		.byte	0
 2706 0115 00       		.byte	0
 2707 0116 13       		.uleb128 0x13
 2708 0117 05       		.uleb128 0x5
 2709 0118 00       		.byte	0
 2710 0119 03       		.uleb128 0x3
 2711 011a 0E       		.uleb128 0xe
 2712 011b 3A       		.uleb128 0x3a
 2713 011c 0B       		.uleb128 0xb
 2714 011d 3B       		.uleb128 0x3b
 2715 011e 05       		.uleb128 0x5
 2716 011f 49       		.uleb128 0x49
 2717 0120 13       		.uleb128 0x13
 2718 0121 02       		.uleb128 0x2
 2719 0122 18       		.uleb128 0x18
 2720 0123 00       		.byte	0
 2721 0124 00       		.byte	0
 2722 0125 14       		.uleb128 0x14
 2723 0126 34       		.uleb128 0x34
 2724 0127 00       		.byte	0
 2725 0128 03       		.uleb128 0x3
 2726 0129 0E       		.uleb128 0xe
 2727 012a 3A       		.uleb128 0x3a
 2728 012b 0B       		.uleb128 0xb
 2729 012c 3B       		.uleb128 0x3b
 2730 012d 05       		.uleb128 0x5
 2731 012e 49       		.uleb128 0x49
 2732 012f 13       		.uleb128 0x13
 2733 0130 1C       		.uleb128 0x1c
 2734 0131 0B       		.uleb128 0xb
 2735 0132 00       		.byte	0
 2736 0133 00       		.byte	0
 2737 0134 15       		.uleb128 0x15
 2738 0135 05       		.uleb128 0x5
 2739 0136 00       		.byte	0
 2740 0137 03       		.uleb128 0x3
 2741 0138 08       		.uleb128 0x8
 2742 0139 3A       		.uleb128 0x3a
 2743 013a 0B       		.uleb128 0xb
 2744 013b 3B       		.uleb128 0x3b
 2745 013c 05       		.uleb128 0x5
 2746 013d 49       		.uleb128 0x49
 2747 013e 13       		.uleb128 0x13
 2748 013f 02       		.uleb128 0x2
 2749 0140 17       		.uleb128 0x17
 2750 0141 00       		.byte	0
 2751 0142 00       		.byte	0
 2752 0143 16       		.uleb128 0x16
 2753 0144 34       		.uleb128 0x34
 2754 0145 00       		.byte	0
 2755 0146 03       		.uleb128 0x3
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 100


 2756 0147 0E       		.uleb128 0xe
 2757 0148 3A       		.uleb128 0x3a
 2758 0149 0B       		.uleb128 0xb
 2759 014a 3B       		.uleb128 0x3b
 2760 014b 05       		.uleb128 0x5
 2761 014c 49       		.uleb128 0x49
 2762 014d 13       		.uleb128 0x13
 2763 014e 00       		.byte	0
 2764 014f 00       		.byte	0
 2765 0150 17       		.uleb128 0x17
 2766 0151 2E       		.uleb128 0x2e
 2767 0152 00       		.byte	0
 2768 0153 3F       		.uleb128 0x3f
 2769 0154 19       		.uleb128 0x19
 2770 0155 03       		.uleb128 0x3
 2771 0156 0E       		.uleb128 0xe
 2772 0157 3A       		.uleb128 0x3a
 2773 0158 0B       		.uleb128 0xb
 2774 0159 3B       		.uleb128 0x3b
 2775 015a 05       		.uleb128 0x5
 2776 015b 27       		.uleb128 0x27
 2777 015c 19       		.uleb128 0x19
 2778 015d 11       		.uleb128 0x11
 2779 015e 01       		.uleb128 0x1
 2780 015f 12       		.uleb128 0x12
 2781 0160 06       		.uleb128 0x6
 2782 0161 40       		.uleb128 0x40
 2783 0162 18       		.uleb128 0x18
 2784 0163 9742     		.uleb128 0x2117
 2785 0165 19       		.uleb128 0x19
 2786 0166 00       		.byte	0
 2787 0167 00       		.byte	0
 2788 0168 18       		.uleb128 0x18
 2789 0169 01       		.uleb128 0x1
 2790 016a 01       		.byte	0x1
 2791 016b 49       		.uleb128 0x49
 2792 016c 13       		.uleb128 0x13
 2793 016d 01       		.uleb128 0x1
 2794 016e 13       		.uleb128 0x13
 2795 016f 00       		.byte	0
 2796 0170 00       		.byte	0
 2797 0171 19       		.uleb128 0x19
 2798 0172 21       		.uleb128 0x21
 2799 0173 00       		.byte	0
 2800 0174 49       		.uleb128 0x49
 2801 0175 13       		.uleb128 0x13
 2802 0176 2F       		.uleb128 0x2f
 2803 0177 0B       		.uleb128 0xb
 2804 0178 00       		.byte	0
 2805 0179 00       		.byte	0
 2806 017a 1A       		.uleb128 0x1a
 2807 017b 34       		.uleb128 0x34
 2808 017c 00       		.byte	0
 2809 017d 03       		.uleb128 0x3
 2810 017e 0E       		.uleb128 0xe
 2811 017f 3A       		.uleb128 0x3a
 2812 0180 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 101


 2813 0181 3B       		.uleb128 0x3b
 2814 0182 0B       		.uleb128 0xb
 2815 0183 49       		.uleb128 0x49
 2816 0184 13       		.uleb128 0x13
 2817 0185 02       		.uleb128 0x2
 2818 0186 18       		.uleb128 0x18
 2819 0187 00       		.byte	0
 2820 0188 00       		.byte	0
 2821 0189 1B       		.uleb128 0x1b
 2822 018a 34       		.uleb128 0x34
 2823 018b 00       		.byte	0
 2824 018c 03       		.uleb128 0x3
 2825 018d 0E       		.uleb128 0xe
 2826 018e 3A       		.uleb128 0x3a
 2827 018f 0B       		.uleb128 0xb
 2828 0190 3B       		.uleb128 0x3b
 2829 0191 0B       		.uleb128 0xb
 2830 0192 49       		.uleb128 0x49
 2831 0193 13       		.uleb128 0x13
 2832 0194 3F       		.uleb128 0x3f
 2833 0195 19       		.uleb128 0x19
 2834 0196 3C       		.uleb128 0x3c
 2835 0197 19       		.uleb128 0x19
 2836 0198 00       		.byte	0
 2837 0199 00       		.byte	0
 2838 019a 1C       		.uleb128 0x1c
 2839 019b 34       		.uleb128 0x34
 2840 019c 00       		.byte	0
 2841 019d 03       		.uleb128 0x3
 2842 019e 0E       		.uleb128 0xe
 2843 019f 3A       		.uleb128 0x3a
 2844 01a0 0B       		.uleb128 0xb
 2845 01a1 3B       		.uleb128 0x3b
 2846 01a2 0B       		.uleb128 0xb
 2847 01a3 49       		.uleb128 0x49
 2848 01a4 13       		.uleb128 0x13
 2849 01a5 3F       		.uleb128 0x3f
 2850 01a6 19       		.uleb128 0x19
 2851 01a7 02       		.uleb128 0x2
 2852 01a8 18       		.uleb128 0x18
 2853 01a9 00       		.byte	0
 2854 01aa 00       		.byte	0
 2855 01ab 1D       		.uleb128 0x1d
 2856 01ac 2E       		.uleb128 0x2e
 2857 01ad 00       		.byte	0
 2858 01ae 3F       		.uleb128 0x3f
 2859 01af 19       		.uleb128 0x19
 2860 01b0 3C       		.uleb128 0x3c
 2861 01b1 19       		.uleb128 0x19
 2862 01b2 6E       		.uleb128 0x6e
 2863 01b3 0E       		.uleb128 0xe
 2864 01b4 03       		.uleb128 0x3
 2865 01b5 0E       		.uleb128 0xe
 2866 01b6 3A       		.uleb128 0x3a
 2867 01b7 0B       		.uleb128 0xb
 2868 01b8 3B       		.uleb128 0x3b
 2869 01b9 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 102


 2870 01ba 00       		.byte	0
 2871 01bb 00       		.byte	0
 2872 01bc 00       		.byte	0
 2873              		.section	.debug_loc,"",%progbits
 2874              	.Ldebug_loc0:
 2875              	.LLST0:
 2876 0000 00000000 		.4byte	.LVL0
 2877 0004 12000000 		.4byte	.LVL2
 2878 0008 0100     		.2byte	0x1
 2879 000a 50       		.byte	0x50
 2880 000b 12000000 		.4byte	.LVL2
 2881 000f 38000000 		.4byte	.LFE34
 2882 0013 0400     		.2byte	0x4
 2883 0015 F3       		.byte	0xf3
 2884 0016 01       		.uleb128 0x1
 2885 0017 50       		.byte	0x50
 2886 0018 9F       		.byte	0x9f
 2887 0019 00000000 		.4byte	0
 2888 001d 00000000 		.4byte	0
 2889              	.LLST1:
 2890 0021 06000000 		.4byte	.LVL1
 2891 0025 1E000000 		.4byte	.LVL3
 2892 0029 0100     		.2byte	0x1
 2893 002b 51       		.byte	0x51
 2894 002c 00000000 		.4byte	0
 2895 0030 00000000 		.4byte	0
 2896              	.LLST2:
 2897 0034 00000000 		.4byte	.LVL4
 2898 0038 07000000 		.4byte	.LVL5-1
 2899 003c 0100     		.2byte	0x1
 2900 003e 50       		.byte	0x50
 2901 003f 07000000 		.4byte	.LVL5-1
 2902 0043 16000000 		.4byte	.LVL8
 2903 0047 0100     		.2byte	0x1
 2904 0049 54       		.byte	0x54
 2905 004a 16000000 		.4byte	.LVL8
 2906 004e 18000000 		.4byte	.LFE35
 2907 0052 0400     		.2byte	0x4
 2908 0054 F3       		.byte	0xf3
 2909 0055 01       		.uleb128 0x1
 2910 0056 50       		.byte	0x50
 2911 0057 9F       		.byte	0x9f
 2912 0058 00000000 		.4byte	0
 2913 005c 00000000 		.4byte	0
 2914              	.LLST3:
 2915 0060 02000000 		.4byte	.LVL9
 2916 0064 06000000 		.4byte	.LVL10
 2917 0068 0200     		.2byte	0x2
 2918 006a 30       		.byte	0x30
 2919 006b 9F       		.byte	0x9f
 2920 006c 06000000 		.4byte	.LVL10
 2921 0070 12000000 		.4byte	.LVL13
 2922 0074 0100     		.2byte	0x1
 2923 0076 54       		.byte	0x54
 2924 0077 00000000 		.4byte	0
 2925 007b 00000000 		.4byte	0
 2926              	.LLST4:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 103


 2927 007f 12000000 		.4byte	.LVL16
 2928 0083 2A000000 		.4byte	.LVL21
 2929 0087 0100     		.2byte	0x1
 2930 0089 54       		.byte	0x54
 2931 008a 00000000 		.4byte	0
 2932 008e 00000000 		.4byte	0
 2933              	.LLST5:
 2934 0092 1A000000 		.4byte	.LVL17
 2935 0096 20000000 		.4byte	.LVL18
 2936 009a 0100     		.2byte	0x1
 2937 009c 50       		.byte	0x50
 2938 009d 00000000 		.4byte	0
 2939 00a1 00000000 		.4byte	0
 2940              	.LLST6:
 2941 00a5 00000000 		.4byte	.LVL22
 2942 00a9 02000000 		.4byte	.LVL23
 2943 00ad 0100     		.2byte	0x1
 2944 00af 50       		.byte	0x50
 2945 00b0 02000000 		.4byte	.LVL23
 2946 00b4 0C000000 		.4byte	.LFE42
 2947 00b8 0400     		.2byte	0x4
 2948 00ba F3       		.byte	0xf3
 2949 00bb 01       		.uleb128 0x1
 2950 00bc 50       		.byte	0x50
 2951 00bd 9F       		.byte	0x9f
 2952 00be 00000000 		.4byte	0
 2953 00c2 00000000 		.4byte	0
 2954              	.LLST7:
 2955 00c6 00000000 		.4byte	.LVL24
 2956 00ca 02000000 		.4byte	.LVL25
 2957 00ce 0100     		.2byte	0x1
 2958 00d0 50       		.byte	0x50
 2959 00d1 02000000 		.4byte	.LVL25
 2960 00d5 0C000000 		.4byte	.LFE43
 2961 00d9 0400     		.2byte	0x4
 2962 00db F3       		.byte	0xf3
 2963 00dc 01       		.uleb128 0x1
 2964 00dd 50       		.byte	0x50
 2965 00de 9F       		.byte	0x9f
 2966 00df 00000000 		.4byte	0
 2967 00e3 00000000 		.4byte	0
 2968              	.LLST8:
 2969 00e7 00000000 		.4byte	.LVL26
 2970 00eb 02000000 		.4byte	.LVL27
 2971 00ef 0100     		.2byte	0x1
 2972 00f1 50       		.byte	0x50
 2973 00f2 02000000 		.4byte	.LVL27
 2974 00f6 10000000 		.4byte	.LFE44
 2975 00fa 0400     		.2byte	0x4
 2976 00fc F3       		.byte	0xf3
 2977 00fd 01       		.uleb128 0x1
 2978 00fe 50       		.byte	0x50
 2979 00ff 9F       		.byte	0x9f
 2980 0100 00000000 		.4byte	0
 2981 0104 00000000 		.4byte	0
 2982              	.LLST9:
 2983 0108 00000000 		.4byte	.LVL28
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 104


 2984 010c 02000000 		.4byte	.LVL29
 2985 0110 0100     		.2byte	0x1
 2986 0112 50       		.byte	0x50
 2987 0113 02000000 		.4byte	.LVL29
 2988 0117 10000000 		.4byte	.LFE45
 2989 011b 0400     		.2byte	0x4
 2990 011d F3       		.byte	0xf3
 2991 011e 01       		.uleb128 0x1
 2992 011f 50       		.byte	0x50
 2993 0120 9F       		.byte	0x9f
 2994 0121 00000000 		.4byte	0
 2995 0125 00000000 		.4byte	0
 2996              	.LLST10:
 2997 0129 00000000 		.4byte	.LVL30
 2998 012d 02000000 		.4byte	.LVL31
 2999 0131 0100     		.2byte	0x1
 3000 0133 50       		.byte	0x50
 3001 0134 02000000 		.4byte	.LVL31
 3002 0138 04000000 		.4byte	.LFE46
 3003 013c 0400     		.2byte	0x4
 3004 013e F3       		.byte	0xf3
 3005 013f 01       		.uleb128 0x1
 3006 0140 50       		.byte	0x50
 3007 0141 9F       		.byte	0x9f
 3008 0142 00000000 		.4byte	0
 3009 0146 00000000 		.4byte	0
 3010              	.LLST11:
 3011 014a 00000000 		.4byte	.LVL32
 3012 014e 02000000 		.4byte	.LVL33
 3013 0152 0100     		.2byte	0x1
 3014 0154 50       		.byte	0x50
 3015 0155 02000000 		.4byte	.LVL33
 3016 0159 04000000 		.4byte	.LFE47
 3017 015d 0400     		.2byte	0x4
 3018 015f F3       		.byte	0xf3
 3019 0160 01       		.uleb128 0x1
 3020 0161 50       		.byte	0x50
 3021 0162 9F       		.byte	0x9f
 3022 0163 00000000 		.4byte	0
 3023 0167 00000000 		.4byte	0
 3024              	.LLST12:
 3025 016b 00000000 		.4byte	.LVL34
 3026 016f 02000000 		.4byte	.LVL35
 3027 0173 0100     		.2byte	0x1
 3028 0175 50       		.byte	0x50
 3029 0176 02000000 		.4byte	.LVL35
 3030 017a 04000000 		.4byte	.LFE48
 3031 017e 0400     		.2byte	0x4
 3032 0180 F3       		.byte	0xf3
 3033 0181 01       		.uleb128 0x1
 3034 0182 50       		.byte	0x50
 3035 0183 9F       		.byte	0x9f
 3036 0184 00000000 		.4byte	0
 3037 0188 00000000 		.4byte	0
 3038              	.LLST13:
 3039 018c 00000000 		.4byte	.LVL36
 3040 0190 02000000 		.4byte	.LVL37
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 105


 3041 0194 0100     		.2byte	0x1
 3042 0196 50       		.byte	0x50
 3043 0197 02000000 		.4byte	.LVL37
 3044 019b 04000000 		.4byte	.LFE49
 3045 019f 0400     		.2byte	0x4
 3046 01a1 F3       		.byte	0xf3
 3047 01a2 01       		.uleb128 0x1
 3048 01a3 50       		.byte	0x50
 3049 01a4 9F       		.byte	0x9f
 3050 01a5 00000000 		.4byte	0
 3051 01a9 00000000 		.4byte	0
 3052              	.LLST14:
 3053 01ad 00000000 		.4byte	.LVL38
 3054 01b1 0C000000 		.4byte	.LVL40
 3055 01b5 0100     		.2byte	0x1
 3056 01b7 50       		.byte	0x50
 3057 01b8 0C000000 		.4byte	.LVL40
 3058 01bc 11000000 		.4byte	.LVL41-1
 3059 01c0 0100     		.2byte	0x1
 3060 01c2 51       		.byte	0x51
 3061 01c3 11000000 		.4byte	.LVL41-1
 3062 01c7 78000000 		.4byte	.LVL50
 3063 01cb 0100     		.2byte	0x1
 3064 01cd 54       		.byte	0x54
 3065 01ce 78000000 		.4byte	.LVL50
 3066 01d2 84000000 		.4byte	.LFE50
 3067 01d6 0400     		.2byte	0x4
 3068 01d8 F3       		.byte	0xf3
 3069 01d9 01       		.uleb128 0x1
 3070 01da 50       		.byte	0x50
 3071 01db 9F       		.byte	0x9f
 3072 01dc 00000000 		.4byte	0
 3073 01e0 00000000 		.4byte	0
 3074              	.LLST15:
 3075 01e4 08000000 		.4byte	.LVL39
 3076 01e8 32000000 		.4byte	.LVL43
 3077 01ec 0100     		.2byte	0x1
 3078 01ee 55       		.byte	0x55
 3079 01ef 38000000 		.4byte	.LVL44
 3080 01f3 46000000 		.4byte	.LVL45
 3081 01f7 0100     		.2byte	0x1
 3082 01f9 55       		.byte	0x55
 3083 01fa 60000000 		.4byte	.LVL47
 3084 01fe 64000000 		.4byte	.LVL48
 3085 0202 0100     		.2byte	0x1
 3086 0204 55       		.byte	0x55
 3087 0205 00000000 		.4byte	0
 3088 0209 00000000 		.4byte	0
 3089              	.LLST17:
 3090 020d 00000000 		.4byte	.LVL51
 3091 0211 04000000 		.4byte	.LVL53
 3092 0215 0100     		.2byte	0x1
 3093 0217 50       		.byte	0x50
 3094 0218 04000000 		.4byte	.LVL53
 3095 021c 10000000 		.4byte	.LFE51
 3096 0220 0400     		.2byte	0x4
 3097 0222 F3       		.byte	0xf3
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 106


 3098 0223 01       		.uleb128 0x1
 3099 0224 50       		.byte	0x50
 3100 0225 9F       		.byte	0x9f
 3101 0226 00000000 		.4byte	0
 3102 022a 00000000 		.4byte	0
 3103              	.LLST18:
 3104 022e 02000000 		.4byte	.LVL52
 3105 0232 0E000000 		.4byte	.LVL55
 3106 0236 0200     		.2byte	0x2
 3107 0238 30       		.byte	0x30
 3108 0239 9F       		.byte	0x9f
 3109 023a 0E000000 		.4byte	.LVL55
 3110 023e 10000000 		.4byte	.LFE51
 3111 0242 0200     		.2byte	0x2
 3112 0244 31       		.byte	0x31
 3113 0245 9F       		.byte	0x9f
 3114 0246 00000000 		.4byte	0
 3115 024a 00000000 		.4byte	0
 3116              	.LLST19:
 3117 024e 02000000 		.4byte	.LVL52
 3118 0252 0E000000 		.4byte	.LVL55
 3119 0256 0200     		.2byte	0x2
 3120 0258 30       		.byte	0x30
 3121 0259 9F       		.byte	0x9f
 3122 025a 0E000000 		.4byte	.LVL55
 3123 025e 10000000 		.4byte	.LFE51
 3124 0262 0100     		.2byte	0x1
 3125 0264 50       		.byte	0x50
 3126 0265 00000000 		.4byte	0
 3127 0269 00000000 		.4byte	0
 3128              	.LLST20:
 3129 026d 02000000 		.4byte	.LVL56
 3130 0271 08000000 		.4byte	.LVL57
 3131 0275 0200     		.2byte	0x2
 3132 0277 30       		.byte	0x30
 3133 0278 9F       		.byte	0x9f
 3134 0279 08000000 		.4byte	.LVL57
 3135 027d 1C000000 		.4byte	.LVL61
 3136 0281 0100     		.2byte	0x1
 3137 0283 54       		.byte	0x54
 3138 0284 00000000 		.4byte	0
 3139 0288 00000000 		.4byte	0
 3140              	.LLST21:
 3141 028c 02000000 		.4byte	.LVL56
 3142 0290 08000000 		.4byte	.LVL57
 3143 0294 0200     		.2byte	0x2
 3144 0296 30       		.byte	0x30
 3145 0297 9F       		.byte	0x9f
 3146 0298 08000000 		.4byte	.LVL57
 3147 029c 1C000000 		.4byte	.LVL62
 3148 02a0 0100     		.2byte	0x1
 3149 02a2 55       		.byte	0x55
 3150 02a3 1C000000 		.4byte	.LVL62
 3151 02a7 1E000000 		.4byte	.LFE52
 3152 02ab 0100     		.2byte	0x1
 3153 02ad 50       		.byte	0x50
 3154 02ae 00000000 		.4byte	0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 107


 3155 02b2 00000000 		.4byte	0
 3156              	.LLST22:
 3157 02b6 00000000 		.4byte	.LVL63
 3158 02ba 08000000 		.4byte	.LVL65
 3159 02be 0100     		.2byte	0x1
 3160 02c0 50       		.byte	0x50
 3161 02c1 08000000 		.4byte	.LVL65
 3162 02c5 14000000 		.4byte	.LFE53
 3163 02c9 0400     		.2byte	0x4
 3164 02cb F3       		.byte	0xf3
 3165 02cc 01       		.uleb128 0x1
 3166 02cd 50       		.byte	0x50
 3167 02ce 9F       		.byte	0x9f
 3168 02cf 00000000 		.4byte	0
 3169 02d3 00000000 		.4byte	0
 3170              	.LLST23:
 3171 02d7 02000000 		.4byte	.LVL64
 3172 02db 0C000000 		.4byte	.LVL66
 3173 02df 0200     		.2byte	0x2
 3174 02e1 30       		.byte	0x30
 3175 02e2 9F       		.byte	0x9f
 3176 02e3 0C000000 		.4byte	.LVL66
 3177 02e7 14000000 		.4byte	.LFE53
 3178 02eb 0200     		.2byte	0x2
 3179 02ed 31       		.byte	0x31
 3180 02ee 9F       		.byte	0x9f
 3181 02ef 00000000 		.4byte	0
 3182 02f3 00000000 		.4byte	0
 3183              	.LLST24:
 3184 02f7 00000000 		.4byte	.LVL67
 3185 02fb 08000000 		.4byte	.LVL69
 3186 02ff 0100     		.2byte	0x1
 3187 0301 50       		.byte	0x50
 3188 0302 08000000 		.4byte	.LVL69
 3189 0306 14000000 		.4byte	.LFE54
 3190 030a 0400     		.2byte	0x4
 3191 030c F3       		.byte	0xf3
 3192 030d 01       		.uleb128 0x1
 3193 030e 50       		.byte	0x50
 3194 030f 9F       		.byte	0x9f
 3195 0310 00000000 		.4byte	0
 3196 0314 00000000 		.4byte	0
 3197              	.LLST25:
 3198 0318 02000000 		.4byte	.LVL68
 3199 031c 0C000000 		.4byte	.LVL70
 3200 0320 0200     		.2byte	0x2
 3201 0322 30       		.byte	0x30
 3202 0323 9F       		.byte	0x9f
 3203 0324 0C000000 		.4byte	.LVL70
 3204 0328 14000000 		.4byte	.LFE54
 3205 032c 0200     		.2byte	0x2
 3206 032e 31       		.byte	0x31
 3207 032f 9F       		.byte	0x9f
 3208 0330 00000000 		.4byte	0
 3209 0334 00000000 		.4byte	0
 3210              	.LLST26:
 3211 0338 00000000 		.4byte	.LVL71
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 108


 3212 033c 02000000 		.4byte	.LVL72
 3213 0340 0100     		.2byte	0x1
 3214 0342 50       		.byte	0x50
 3215 0343 02000000 		.4byte	.LVL72
 3216 0347 0C000000 		.4byte	.LFE55
 3217 034b 0400     		.2byte	0x4
 3218 034d F3       		.byte	0xf3
 3219 034e 01       		.uleb128 0x1
 3220 034f 50       		.byte	0x50
 3221 0350 9F       		.byte	0x9f
 3222 0351 00000000 		.4byte	0
 3223 0355 00000000 		.4byte	0
 3224              	.LLST27:
 3225 0359 00000000 		.4byte	.LVL71
 3226 035d 04000000 		.4byte	.LVL73
 3227 0361 0100     		.2byte	0x1
 3228 0363 51       		.byte	0x51
 3229 0364 04000000 		.4byte	.LVL73
 3230 0368 0C000000 		.4byte	.LFE55
 3231 036c 0400     		.2byte	0x4
 3232 036e F3       		.byte	0xf3
 3233 036f 01       		.uleb128 0x1
 3234 0370 51       		.byte	0x51
 3235 0371 9F       		.byte	0x9f
 3236 0372 00000000 		.4byte	0
 3237 0376 00000000 		.4byte	0
 3238              	.LLST28:
 3239 037a 02000000 		.4byte	.LVL72
 3240 037e 0A000000 		.4byte	.LVL76
 3241 0382 0100     		.2byte	0x1
 3242 0384 50       		.byte	0x50
 3243 0385 00000000 		.4byte	0
 3244 0389 00000000 		.4byte	0
 3245              	.LLST29:
 3246 038d 00000000 		.4byte	.LVL77
 3247 0391 0E000000 		.4byte	.LVL79
 3248 0395 0100     		.2byte	0x1
 3249 0397 50       		.byte	0x50
 3250 0398 0E000000 		.4byte	.LVL79
 3251 039c A6000000 		.4byte	.LVL94
 3252 03a0 0100     		.2byte	0x1
 3253 03a2 54       		.byte	0x54
 3254 03a3 A6000000 		.4byte	.LVL94
 3255 03a7 AE000000 		.4byte	.LVL95
 3256 03ab 0400     		.2byte	0x4
 3257 03ad F3       		.byte	0xf3
 3258 03ae 01       		.uleb128 0x1
 3259 03af 50       		.byte	0x50
 3260 03b0 9F       		.byte	0x9f
 3261 03b1 AE000000 		.4byte	.LVL95
 3262 03b5 B0000000 		.4byte	.LVL96
 3263 03b9 0100     		.2byte	0x1
 3264 03bb 54       		.byte	0x54
 3265 03bc B0000000 		.4byte	.LVL96
 3266 03c0 D4000000 		.4byte	.LFE38
 3267 03c4 0400     		.2byte	0x4
 3268 03c6 F3       		.byte	0xf3
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 109


 3269 03c7 01       		.uleb128 0x1
 3270 03c8 50       		.byte	0x50
 3271 03c9 9F       		.byte	0x9f
 3272 03ca 00000000 		.4byte	0
 3273 03ce 00000000 		.4byte	0
 3274              	.LLST30:
 3275 03d2 7C000000 		.4byte	.LVL88
 3276 03d6 7E000000 		.4byte	.LVL89
 3277 03da 0100     		.2byte	0x1
 3278 03dc 53       		.byte	0x53
 3279 03dd 7E000000 		.4byte	.LVL89
 3280 03e1 88000000 		.4byte	.LVL90
 3281 03e5 0100     		.2byte	0x1
 3282 03e7 5C       		.byte	0x5c
 3283 03e8 88000000 		.4byte	.LVL90
 3284 03ec 8A000000 		.4byte	.LVL91
 3285 03f0 0100     		.2byte	0x1
 3286 03f2 53       		.byte	0x53
 3287 03f3 8A000000 		.4byte	.LVL91
 3288 03f7 9C000000 		.4byte	.LVL93
 3289 03fb 0100     		.2byte	0x1
 3290 03fd 50       		.byte	0x50
 3291 03fe 00000000 		.4byte	0
 3292 0402 00000000 		.4byte	0
 3293              	.LLST31:
 3294 0406 36000000 		.4byte	.LVL81
 3295 040a 3A000000 		.4byte	.LVL82
 3296 040e 0200     		.2byte	0x2
 3297 0410 31       		.byte	0x31
 3298 0411 9F       		.byte	0x9f
 3299 0412 3E000000 		.4byte	.LVL83
 3300 0416 40000000 		.4byte	.LVL84
 3301 041a 0200     		.2byte	0x2
 3302 041c 30       		.byte	0x30
 3303 041d 9F       		.byte	0x9f
 3304 041e 40000000 		.4byte	.LVL84
 3305 0422 B8000000 		.4byte	.LVL98
 3306 0426 0100     		.2byte	0x1
 3307 0428 56       		.byte	0x56
 3308 0429 00000000 		.4byte	0
 3309 042d 00000000 		.4byte	0
 3310              	.LLST32:
 3311 0431 36000000 		.4byte	.LVL81
 3312 0435 3A000000 		.4byte	.LVL82
 3313 0439 0100     		.2byte	0x1
 3314 043b 55       		.byte	0x55
 3315 043c 3E000000 		.4byte	.LVL83
 3316 0440 B8000000 		.4byte	.LVL97
 3317 0444 0100     		.2byte	0x1
 3318 0446 55       		.byte	0x55
 3319 0447 00000000 		.4byte	0
 3320 044b 00000000 		.4byte	0
 3321              	.LLST33:
 3322 044f 0E000000 		.4byte	.LVL79
 3323 0453 1F000000 		.4byte	.LVL80-1
 3324 0457 0100     		.2byte	0x1
 3325 0459 50       		.byte	0x50
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 110


 3326 045a 20000000 		.4byte	.LVL80
 3327 045e 58000000 		.4byte	.LVL85
 3328 0462 0100     		.2byte	0x1
 3329 0464 50       		.byte	0x50
 3330 0465 64000000 		.4byte	.LVL87
 3331 0469 8A000000 		.4byte	.LVL91
 3332 046d 0100     		.2byte	0x1
 3333 046f 50       		.byte	0x50
 3334 0470 00000000 		.4byte	0
 3335 0474 00000000 		.4byte	0
 3336              	.LLST34:
 3337 0478 00000000 		.4byte	.LVL99
 3338 047c 05000000 		.4byte	.LVL100-1
 3339 0480 0100     		.2byte	0x1
 3340 0482 50       		.byte	0x50
 3341 0483 05000000 		.4byte	.LVL100-1
 3342 0487 08000000 		.4byte	.LFE39
 3343 048b 0400     		.2byte	0x4
 3344 048d F3       		.byte	0xf3
 3345 048e 01       		.uleb128 0x1
 3346 048f 50       		.byte	0x50
 3347 0490 9F       		.byte	0x9f
 3348 0491 00000000 		.4byte	0
 3349 0495 00000000 		.4byte	0
 3350              	.LLST35:
 3351 0499 02000000 		.4byte	.LVL101
 3352 049d 06000000 		.4byte	.LVL102
 3353 04a1 0200     		.2byte	0x2
 3354 04a3 30       		.byte	0x30
 3355 04a4 9F       		.byte	0x9f
 3356 04a5 06000000 		.4byte	.LVL102
 3357 04a9 1E000000 		.4byte	.LVL107
 3358 04ad 0100     		.2byte	0x1
 3359 04af 54       		.byte	0x54
 3360 04b0 00000000 		.4byte	0
 3361 04b4 00000000 		.4byte	0
 3362              	.LLST36:
 3363 04b8 0E000000 		.4byte	.LVL103
 3364 04bc 14000000 		.4byte	.LVL104
 3365 04c0 0100     		.2byte	0x1
 3366 04c2 50       		.byte	0x50
 3367 04c3 00000000 		.4byte	0
 3368 04c7 00000000 		.4byte	0
 3369              	.LLST37:
 3370 04cb 00000000 		.4byte	.LVL108
 3371 04cf 06000000 		.4byte	.LVL110
 3372 04d3 0100     		.2byte	0x1
 3373 04d5 50       		.byte	0x50
 3374 04d6 06000000 		.4byte	.LVL110
 3375 04da 24000000 		.4byte	.LFE41
 3376 04de 0400     		.2byte	0x4
 3377 04e0 F3       		.byte	0xf3
 3378 04e1 01       		.uleb128 0x1
 3379 04e2 50       		.byte	0x50
 3380 04e3 9F       		.byte	0x9f
 3381 04e4 00000000 		.4byte	0
 3382 04e8 00000000 		.4byte	0
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 111


 3383              	.LLST38:
 3384 04ec 02000000 		.4byte	.LVL109
 3385 04f0 06000000 		.4byte	.LVL110
 3386 04f4 0200     		.2byte	0x2
 3387 04f6 30       		.byte	0x30
 3388 04f7 9F       		.byte	0x9f
 3389 04f8 06000000 		.4byte	.LVL110
 3390 04fc 1E000000 		.4byte	.LVL115
 3391 0500 0100     		.2byte	0x1
 3392 0502 54       		.byte	0x54
 3393 0503 00000000 		.4byte	0
 3394 0507 00000000 		.4byte	0
 3395              	.LLST39:
 3396 050b 0E000000 		.4byte	.LVL111
 3397 050f 14000000 		.4byte	.LVL112
 3398 0513 0100     		.2byte	0x1
 3399 0515 50       		.byte	0x50
 3400 0516 00000000 		.4byte	0
 3401 051a 00000000 		.4byte	0
 3402              	.LLST40:
 3403 051e 00000000 		.4byte	.LVL116
 3404 0522 04000000 		.4byte	.LVL117
 3405 0526 0100     		.2byte	0x1
 3406 0528 50       		.byte	0x50
 3407 0529 04000000 		.4byte	.LVL117
 3408 052d 0C000000 		.4byte	.LFE56
 3409 0531 0400     		.2byte	0x4
 3410 0533 F3       		.byte	0xf3
 3411 0534 01       		.uleb128 0x1
 3412 0535 50       		.byte	0x50
 3413 0536 9F       		.byte	0x9f
 3414 0537 00000000 		.4byte	0
 3415 053b 00000000 		.4byte	0
 3416              	.LLST41:
 3417 053f 00000000 		.4byte	.LVL118
 3418 0543 04000000 		.4byte	.LVL119
 3419 0547 0100     		.2byte	0x1
 3420 0549 50       		.byte	0x50
 3421 054a 04000000 		.4byte	.LVL119
 3422 054e 0C000000 		.4byte	.LFE57
 3423 0552 0400     		.2byte	0x4
 3424 0554 F3       		.byte	0xf3
 3425 0555 01       		.uleb128 0x1
 3426 0556 50       		.byte	0x50
 3427 0557 9F       		.byte	0x9f
 3428 0558 00000000 		.4byte	0
 3429 055c 00000000 		.4byte	0
 3430              	.LLST42:
 3431 0560 00000000 		.4byte	.LVL120
 3432 0564 02000000 		.4byte	.LVL121
 3433 0568 0100     		.2byte	0x1
 3434 056a 50       		.byte	0x50
 3435 056b 02000000 		.4byte	.LVL121
 3436 056f 04000000 		.4byte	.LFE58
 3437 0573 0400     		.2byte	0x4
 3438 0575 F3       		.byte	0xf3
 3439 0576 01       		.uleb128 0x1
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 112


 3440 0577 50       		.byte	0x50
 3441 0578 9F       		.byte	0x9f
 3442 0579 00000000 		.4byte	0
 3443 057d 00000000 		.4byte	0
 3444              		.section	.debug_aranges,"",%progbits
 3445 0000 EC000000 		.4byte	0xec
 3446 0004 0200     		.2byte	0x2
 3447 0006 00000000 		.4byte	.Ldebug_info0
 3448 000a 04       		.byte	0x4
 3449 000b 00       		.byte	0
 3450 000c 0000     		.2byte	0
 3451 000e 0000     		.2byte	0
 3452 0010 00000000 		.4byte	.LFB34
 3453 0014 38000000 		.4byte	.LFE34-.LFB34
 3454 0018 00000000 		.4byte	.LFB35
 3455 001c 18000000 		.4byte	.LFE35-.LFB35
 3456 0020 00000000 		.4byte	.LFB36
 3457 0024 14000000 		.4byte	.LFE36-.LFB36
 3458 0028 00000000 		.4byte	.LFB37
 3459 002c 30000000 		.4byte	.LFE37-.LFB37
 3460 0030 00000000 		.4byte	.LFB42
 3461 0034 0C000000 		.4byte	.LFE42-.LFB42
 3462 0038 00000000 		.4byte	.LFB43
 3463 003c 0C000000 		.4byte	.LFE43-.LFB43
 3464 0040 00000000 		.4byte	.LFB44
 3465 0044 10000000 		.4byte	.LFE44-.LFB44
 3466 0048 00000000 		.4byte	.LFB45
 3467 004c 10000000 		.4byte	.LFE45-.LFB45
 3468 0050 00000000 		.4byte	.LFB46
 3469 0054 04000000 		.4byte	.LFE46-.LFB46
 3470 0058 00000000 		.4byte	.LFB47
 3471 005c 04000000 		.4byte	.LFE47-.LFB47
 3472 0060 00000000 		.4byte	.LFB48
 3473 0064 04000000 		.4byte	.LFE48-.LFB48
 3474 0068 00000000 		.4byte	.LFB49
 3475 006c 04000000 		.4byte	.LFE49-.LFB49
 3476 0070 00000000 		.4byte	.LFB50
 3477 0074 84000000 		.4byte	.LFE50-.LFB50
 3478 0078 00000000 		.4byte	.LFB51
 3479 007c 10000000 		.4byte	.LFE51-.LFB51
 3480 0080 00000000 		.4byte	.LFB52
 3481 0084 1E000000 		.4byte	.LFE52-.LFB52
 3482 0088 00000000 		.4byte	.LFB53
 3483 008c 14000000 		.4byte	.LFE53-.LFB53
 3484 0090 00000000 		.4byte	.LFB54
 3485 0094 14000000 		.4byte	.LFE54-.LFB54
 3486 0098 00000000 		.4byte	.LFB55
 3487 009c 0C000000 		.4byte	.LFE55-.LFB55
 3488 00a0 00000000 		.4byte	.LFB38
 3489 00a4 D4000000 		.4byte	.LFE38-.LFB38
 3490 00a8 00000000 		.4byte	.LFB39
 3491 00ac 08000000 		.4byte	.LFE39-.LFB39
 3492 00b0 00000000 		.4byte	.LFB40
 3493 00b4 24000000 		.4byte	.LFE40-.LFB40
 3494 00b8 00000000 		.4byte	.LFB41
 3495 00bc 24000000 		.4byte	.LFE41-.LFB41
 3496 00c0 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 113


 3497 00c4 0C000000 		.4byte	.LFE56-.LFB56
 3498 00c8 00000000 		.4byte	.LFB57
 3499 00cc 0C000000 		.4byte	.LFE57-.LFB57
 3500 00d0 00000000 		.4byte	.LFB58
 3501 00d4 04000000 		.4byte	.LFE58-.LFB58
 3502 00d8 00000000 		.4byte	.LFB59
 3503 00dc 0C000000 		.4byte	.LFE59-.LFB59
 3504 00e0 00000000 		.4byte	.LFB60
 3505 00e4 0C000000 		.4byte	.LFE60-.LFB60
 3506 00e8 00000000 		.4byte	0
 3507 00ec 00000000 		.4byte	0
 3508              		.section	.debug_ranges,"",%progbits
 3509              	.Ldebug_ranges0:
 3510 0000 00000000 		.4byte	.LFB34
 3511 0004 38000000 		.4byte	.LFE34
 3512 0008 00000000 		.4byte	.LFB35
 3513 000c 18000000 		.4byte	.LFE35
 3514 0010 00000000 		.4byte	.LFB36
 3515 0014 14000000 		.4byte	.LFE36
 3516 0018 00000000 		.4byte	.LFB37
 3517 001c 30000000 		.4byte	.LFE37
 3518 0020 00000000 		.4byte	.LFB42
 3519 0024 0C000000 		.4byte	.LFE42
 3520 0028 00000000 		.4byte	.LFB43
 3521 002c 0C000000 		.4byte	.LFE43
 3522 0030 00000000 		.4byte	.LFB44
 3523 0034 10000000 		.4byte	.LFE44
 3524 0038 00000000 		.4byte	.LFB45
 3525 003c 10000000 		.4byte	.LFE45
 3526 0040 00000000 		.4byte	.LFB46
 3527 0044 04000000 		.4byte	.LFE46
 3528 0048 00000000 		.4byte	.LFB47
 3529 004c 04000000 		.4byte	.LFE47
 3530 0050 00000000 		.4byte	.LFB48
 3531 0054 04000000 		.4byte	.LFE48
 3532 0058 00000000 		.4byte	.LFB49
 3533 005c 04000000 		.4byte	.LFE49
 3534 0060 00000000 		.4byte	.LFB50
 3535 0064 84000000 		.4byte	.LFE50
 3536 0068 00000000 		.4byte	.LFB51
 3537 006c 10000000 		.4byte	.LFE51
 3538 0070 00000000 		.4byte	.LFB52
 3539 0074 1E000000 		.4byte	.LFE52
 3540 0078 00000000 		.4byte	.LFB53
 3541 007c 14000000 		.4byte	.LFE53
 3542 0080 00000000 		.4byte	.LFB54
 3543 0084 14000000 		.4byte	.LFE54
 3544 0088 00000000 		.4byte	.LFB55
 3545 008c 0C000000 		.4byte	.LFE55
 3546 0090 00000000 		.4byte	.LFB38
 3547 0094 D4000000 		.4byte	.LFE38
 3548 0098 00000000 		.4byte	.LFB39
 3549 009c 08000000 		.4byte	.LFE39
 3550 00a0 00000000 		.4byte	.LFB40
 3551 00a4 24000000 		.4byte	.LFE40
 3552 00a8 00000000 		.4byte	.LFB41
 3553 00ac 24000000 		.4byte	.LFE41
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 114


 3554 00b0 00000000 		.4byte	.LFB56
 3555 00b4 0C000000 		.4byte	.LFE56
 3556 00b8 00000000 		.4byte	.LFB57
 3557 00bc 0C000000 		.4byte	.LFE57
 3558 00c0 00000000 		.4byte	.LFB58
 3559 00c4 04000000 		.4byte	.LFE58
 3560 00c8 00000000 		.4byte	.LFB59
 3561 00cc 0C000000 		.4byte	.LFE59
 3562 00d0 00000000 		.4byte	.LFB60
 3563 00d4 0C000000 		.4byte	.LFE60
 3564 00d8 00000000 		.4byte	0
 3565 00dc 00000000 		.4byte	0
 3566              		.section	.debug_line,"",%progbits
 3567              	.Ldebug_line0:
 3568 0000 17030000 		.section	.debug_str,"MS",%progbits,1
 3568      02006A00 
 3568      00000201 
 3568      FB0E0D00 
 3568      01010101 
 3569              	.LASF34:
 3570 0000 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 3570      656E7365 
 3570      5F436865 
 3570      636B4973 
 3570      53656E73 
 3571              	.LASF65:
 3572 001d 43617053 		.ascii	"CapSense_sensorRaw\000"
 3572      656E7365 
 3572      5F73656E 
 3572      736F7252 
 3572      617700
 3573              	.LASF43:
 3574 0030 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 3574      656E7365 
 3574      5F436865 
 3574      636B4973 
 3574      416E7957 
 3575              	.LASF61:
 3576 0050 43617053 		.ascii	"CapSense_GetDebounce\000"
 3576      656E7365 
 3576      5F476574 
 3576      4465626F 
 3576      756E6365 
 3577              	.LASF55:
 3578 0065 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 3578      656E7365 
 3578      5F557064 
 3578      61746557 
 3578      69646765 
 3579              	.LASF2:
 3580 0083 73686F72 		.ascii	"short int\000"
 3580      7420696E 
 3580      7400
 3581              	.LASF51:
 3582 008d 66696C74 		.ascii	"filteredRawData\000"
 3582      65726564 
 3582      52617744 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 115


 3582      61746100 
 3583              	.LASF80:
 3584 009d 43617053 		.ascii	"CapSense_rawFilterData1\000"
 3584      656E7365 
 3584      5F726177 
 3584      46696C74 
 3584      65724461 
 3585              	.LASF36:
 3586 00b5 6465626F 		.ascii	"debounceIndex\000"
 3586      756E6365 
 3586      496E6465 
 3586      7800
 3587              	.LASF40:
 3588 00c3 72617749 		.ascii	"rawIndex\000"
 3588      6E646578 
 3588      00
 3589              	.LASF21:
 3590 00cc 77696467 		.ascii	"widget\000"
 3590      657400
 3591              	.LASF76:
 3592 00d3 43617053 		.ascii	"CapSense_hysteresis\000"
 3592      656E7365 
 3592      5F687973 
 3592      74657265 
 3592      73697300 
 3593              	.LASF25:
 3594 00e7 64617461 		.ascii	"data\000"
 3594      00
 3595              	.LASF54:
 3596 00ec 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 3596      656E7365 
 3596      5F557064 
 3596      61746545 
 3596      6E61626C 
 3597              	.LASF41:
 3598 010c 6E756D4F 		.ascii	"numOfSensors\000"
 3598      6653656E 
 3598      736F7273 
 3598      00
 3599              	.LASF77:
 3600 0119 43617053 		.ascii	"CapSense_debounce\000"
 3600      656E7365 
 3600      5F646562 
 3600      6F756E63 
 3600      6500
 3601              	.LASF62:
 3602 012b 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 3602      656E7365 
 3602      5F456E61 
 3602      626C6552 
 3602      61774461 
 3603              	.LASF29:
 3604 0149 76616C75 		.ascii	"value\000"
 3604      6500
 3605              	.LASF87:
 3606 014f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3606      43313120 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 116


 3606      352E342E 
 3606      31203230 
 3606      31363036 
 3607 0182 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3607      20726576 
 3607      6973696F 
 3607      6E203233 
 3607      37373135 
 3608 01b5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3608      66756E63 
 3608      74696F6E 
 3608      2D736563 
 3608      74696F6E 
 3609              	.LASF53:
 3610 01dd 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 3610      656E7365 
 3610      5F557064 
 3610      61746553 
 3610      656E736F 
 3611              	.LASF19:
 3612 01fb 73656E73 		.ascii	"sensor\000"
 3612      6F7200
 3613              	.LASF72:
 3614 0202 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 3614      656E7365 
 3614      5F6C6F77 
 3614      42617365 
 3614      6C696E65 
 3615              	.LASF9:
 3616 021f 75696E74 		.ascii	"uint8\000"
 3616      3800
 3617              	.LASF84:
 3618 0225 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 3618      656E7365 
 3618      5F536361 
 3618      6E456E61 
 3618      626C6564 
 3619              	.LASF85:
 3620 0241 43617053 		.ascii	"CapSense_GetBitValue\000"
 3620      656E7365 
 3620      5F476574 
 3620      42697456 
 3620      616C7565 
 3621              	.LASF66:
 3622 0256 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 3622      656E7365 
 3622      5F73656E 
 3622      736F7245 
 3622      6E61626C 
 3623              	.LASF12:
 3624 0270 666C6F61 		.ascii	"float\000"
 3624      7400
 3625              	.LASF48:
 3626 0276 63616C63 		.ascii	"calc\000"
 3626      00
 3627              	.LASF6:
 3628 027b 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 117


 3628      206C6F6E 
 3628      6720696E 
 3628      7400
 3629              	.LASF4:
 3630 0289 6C6F6E67 		.ascii	"long int\000"
 3630      20696E74 
 3630      00
 3631              	.LASF35:
 3632 0292 6465626F 		.ascii	"debounce\000"
 3632      756E6365 
 3632      00
 3633              	.LASF50:
 3634 029b 74656D70 		.ascii	"tempRaw\000"
 3634      52617700 
 3635              	.LASF79:
 3636 02a3 43617053 		.ascii	"CapSense_numberOfSensors\000"
 3636      656E7365 
 3636      5F6E756D 
 3636      6265724F 
 3636      6653656E 
 3637              	.LASF78:
 3638 02bc 43617053 		.ascii	"CapSense_rawDataIndex\000"
 3638      656E7365 
 3638      5F726177 
 3638      44617461 
 3638      496E6465 
 3639              	.LASF52:
 3640 02d2 6E6F6973 		.ascii	"noiseThreshold\000"
 3640      65546872 
 3640      6573686F 
 3640      6C6400
 3641              	.LASF32:
 3642 02e1 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 3642      656E7365 
 3642      5F476574 
 3642      46696E67 
 3642      65724879 
 3643              	.LASF71:
 3644 02fe 43617053 		.ascii	"CapSense_sensorOnMask\000"
 3644      656E7365 
 3644      5F73656E 
 3644      736F724F 
 3644      6E4D6173 
 3645              	.LASF73:
 3646 0314 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 3646      656E7365 
 3646      5F6C6F77 
 3646      42617365 
 3646      6C696E65 
 3647              	.LASF42:
 3648 032e 73746174 		.ascii	"state\000"
 3648      6500
 3649              	.LASF38:
 3650 0334 68797374 		.ascii	"hysteresis\000"
 3650      65726573 
 3650      697300
 3651              	.LASF16:
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 118


 3652 033f 6C6F6E67 		.ascii	"long double\000"
 3652      20646F75 
 3652      626C6500 
 3653              	.LASF82:
 3654 034b 43617053 		.ascii	"CapSense_ScanSensor\000"
 3654      656E7365 
 3654      5F536361 
 3654      6E53656E 
 3654      736F7200 
 3655              	.LASF1:
 3656 035f 756E7369 		.ascii	"unsigned char\000"
 3656      676E6564 
 3656      20636861 
 3656      7200
 3657              	.LASF24:
 3658 036d 43617053 		.ascii	"CapSense_SetBaselineData\000"
 3658      656E7365 
 3658      5F536574 
 3658      42617365 
 3658      6C696E65 
 3659              	.LASF0:
 3660 0386 7369676E 		.ascii	"signed char\000"
 3660      65642063 
 3660      68617200 
 3661              	.LASF89:
 3662 0392 433A5C55 		.ascii	"C:\\Users\\AntonioFrancisco\\Desktop\\TFG PSoC\\TFG"
 3662      73657273 
 3662      5C416E74 
 3662      6F6E696F 
 3662      4672616E 
 3663 03c0 5F43414D 		.ascii	"_CAMBIO_UUID\\TFG_CAMBIOUUID\\TFG_BluetoothLowEnerg"
 3663      42494F5F 
 3663      55554944 
 3663      5C544647 
 3663      5F43414D 
 3664 03f1 792E6379 		.ascii	"y.cydsn\000"
 3664      64736E00 
 3665              	.LASF7:
 3666 03f9 6C6F6E67 		.ascii	"long long unsigned int\000"
 3666      206C6F6E 
 3666      6720756E 
 3666      7369676E 
 3666      65642069 
 3667              	.LASF8:
 3668 0410 756E7369 		.ascii	"unsigned int\000"
 3668      676E6564 
 3668      20696E74 
 3668      00
 3669              	.LASF22:
 3670 041d 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 3670      656E7365 
 3670      5F496E69 
 3670      7469616C 
 3670      697A6545 
 3671              	.LASF70:
 3672 0441 43617053 		.ascii	"CapSense_sensorSignal\000"
 3672      656E7365 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 119


 3672      5F73656E 
 3672      736F7253 
 3672      69676E61 
 3673              	.LASF31:
 3674 0457 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 3674      656E7365 
 3674      5F476574 
 3674      4E6F6973 
 3674      65546872 
 3675              	.LASF45:
 3676 0472 43617053 		.ascii	"CapSense_DisableWidget\000"
 3676      656E7365 
 3676      5F446973 
 3676      61626C65 
 3676      57696467 
 3677              	.LASF46:
 3678 0489 43617053 		.ascii	"CapSense_IIR4Filter\000"
 3678      656E7365 
 3678      5F494952 
 3678      3446696C 
 3678      74657200 
 3679              	.LASF23:
 3680 049d 69735365 		.ascii	"isSensorEnabled\000"
 3680      6E736F72 
 3680      456E6162 
 3680      6C656400 
 3681              	.LASF14:
 3682 04ad 63686172 		.ascii	"char\000"
 3682      00
 3683              	.LASF15:
 3684 04b2 73697A65 		.ascii	"sizetype\000"
 3684      74797065 
 3684      00
 3685              	.LASF57:
 3686 04bb 66697273 		.ascii	"firstSensor\000"
 3686      7453656E 
 3686      736F7200 
 3687              	.LASF30:
 3688 04c7 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 3688      656E7365 
 3688      5F476574 
 3688      46696E67 
 3688      65725468 
 3689              	.LASF20:
 3690 04e3 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 3690      656E7365 
 3690      5F496E69 
 3690      7469616C 
 3690      697A6541 
 3691              	.LASF58:
 3692 0503 6C617374 		.ascii	"lastSensor\000"
 3692      53656E73 
 3692      6F7200
 3693              	.LASF86:
 3694 050e 43617053 		.ascii	"CapSense_SetBitValue\000"
 3694      656E7365 
 3694      5F536574 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 120


 3694      42697456 
 3694      616C7565 
 3695              	.LASF27:
 3696 0523 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 3696      656E7365 
 3696      5F476574 
 3696      44696666 
 3696      436F756E 
 3697              	.LASF69:
 3698 053d 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 3698      656E7365 
 3698      5F73656E 
 3698      736F7242 
 3698      6173656C 
 3699              	.LASF10:
 3700 0558 75696E74 		.ascii	"uint16\000"
 3700      313600
 3701              	.LASF75:
 3702 055f 43617053 		.ascii	"CapSense_noiseThreshold\000"
 3702      656E7365 
 3702      5F6E6F69 
 3702      73655468 
 3702      72657368 
 3703              	.LASF3:
 3704 0577 73686F72 		.ascii	"short unsigned int\000"
 3704      7420756E 
 3704      7369676E 
 3704      65642069 
 3704      6E7400
 3705              	.LASF47:
 3706 058a 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 3706      656E7365 
 3706      5F557064 
 3706      61746542 
 3706      6173656C 
 3707              	.LASF11:
 3708 05ad 75696E74 		.ascii	"uint32\000"
 3708      333200
 3709              	.LASF5:
 3710 05b4 6C6F6E67 		.ascii	"long unsigned int\000"
 3710      20756E73 
 3710      69676E65 
 3710      6420696E 
 3710      7400
 3711              	.LASF49:
 3712 05c6 7369676E 		.ascii	"sign\000"
 3712      00
 3713              	.LASF60:
 3714 05cb 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 3714      656E7365 
 3714      5F476574 
 3714      4C6F7742 
 3714      6173656C 
 3715              	.LASF74:
 3716 05e8 43617053 		.ascii	"CapSense_fingerThreshold\000"
 3716      656E7365 
 3716      5F66696E 
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 121


 3716      67657254 
 3716      68726573 
 3717              	.LASF67:
 3718 0601 43617053 		.ascii	"CapSense_widgetNumber\000"
 3718      656E7365 
 3718      5F776964 
 3718      6765744E 
 3718      756D6265 
 3719              	.LASF44:
 3720 0617 43617053 		.ascii	"CapSense_EnableWidget\000"
 3720      656E7365 
 3720      5F456E61 
 3720      626C6557 
 3720      69646765 
 3721              	.LASF81:
 3722 062d 43617053 		.ascii	"CapSense_enableRawFilters\000"
 3722      656E7365 
 3722      5F656E61 
 3722      626C6552 
 3722      61774669 
 3723              	.LASF83:
 3724 0647 43617053 		.ascii	"CapSense_IsBusy\000"
 3724      656E7365 
 3724      5F497342 
 3724      75737900 
 3725              	.LASF68:
 3726 0657 43617053 		.ascii	"CapSense_sensorBaseline\000"
 3726      656E7365 
 3726      5F73656E 
 3726      736F7242 
 3726      6173656C 
 3727              	.LASF88:
 3728 066f 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 3728      72617465 
 3728      645F536F 
 3728      75726365 
 3728      5C50536F 
 3729              	.LASF64:
 3730 0696 43617053 		.ascii	"CapSense_debounceCounter\000"
 3730      656E7365 
 3730      5F646562 
 3730      6F756E63 
 3730      65436F75 
 3731              	.LASF33:
 3732 06af 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 3732      656E7365 
 3732      5F476574 
 3732      4E656761 
 3732      74697665 
 3733              	.LASF59:
 3734 06d2 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 3734      656E7365 
 3734      5F476574 
 3734      57696467 
 3734      65744E75 
 3735              	.LASF13:
 3736 06eb 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\ANTONI~1\AppData\Local\Temp\ccZ5izgT.s 			page 122


 3736      6C6500
 3737              	.LASF63:
 3738 06f2 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 3738      656E7365 
 3738      5F446973 
 3738      61626C65 
 3738      52617744 
 3739              	.LASF56:
 3740 0711 73656E73 		.ascii	"sensorsPerWidget\000"
 3740      6F727350 
 3740      65725769 
 3740      64676574 
 3740      00
 3741              	.LASF28:
 3742 0722 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 3742      656E7365 
 3742      5F536574 
 3742      44696666 
 3742      436F756E 
 3743              	.LASF26:
 3744 073c 43617053 		.ascii	"CapSense_GetBaselineData\000"
 3744      656E7365 
 3744      5F476574 
 3744      42617365 
 3744      6C696E65 
 3745              	.LASF37:
 3746 0755 66696E67 		.ascii	"fingerThreshold\000"
 3746      65725468 
 3746      72657368 
 3746      6F6C6400 
 3747              	.LASF39:
 3748 0765 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 3748      656E7365 
 3748      5F436865 
 3748      636B4973 
 3748      57696467 
 3749              	.LASF17:
 3750 0782 43617053 		.ascii	"CapSense_BaseInit\000"
 3750      656E7365 
 3750      5F426173 
 3750      65496E69 
 3750      7400
 3751              	.LASF18:
 3752 0794 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3752      656E7365 
 3752      5F496E69 
 3752      7469616C 
 3752      697A6553 
 3753              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
